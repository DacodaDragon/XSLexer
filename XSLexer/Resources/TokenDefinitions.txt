# XS Tokenization chart using regular expression
# 
# Root		: [bool]	# Can this token be made without any prior context?
# CharStart : [Regex]	# The regex that needs to be valid on the first character
# CharBody	: [Regex]   # The regex that needs to be valid on all characters after the first character
# WordsDef	: [Ref]		# Name to a list of words defined anywhere else in the file.		>> CharStart and CharBody are required.
# Word		: [Regex]   # The regex with the specific word it needs to be to be that token. >> CharStart and CharBody are required.
# FollowedBy: [Token]   # Requires to be followed up by a different token

DataType>
	Root: True
	CharStart: [a-zA-Z]
	CharBody: [a-zA-Z]
	WordsDef: XsFunctionReturnTypes

FunctionDefinition>
	CharStart: [a-zA-Z_]
	CharBody: [a-zA-Z0-9_]
	FollowedBy: FunctionParameterBody

FunctionParameterBodyOpen>
	CharStart: [(]
	FollowedBy: FunctionParameterBodyClose

FunctionParameterBodyClose>
	CharStart: [)]
	FollowedBy: FunctionBodyOpen

FunctionBodyOpen>
	CharStart: [{]
	FollowedBy: FunctionBodyClose

FunctionBodyClose>
	CharStart: [}]