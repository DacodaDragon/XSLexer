//FIXME: attack types need to use "Rate" to determine legal targets rather than just whatever is most damaging
//For specifying attack retrieve type
extern const int cHandAttack=2;
extern const int cRangedAttack=3;
extern const int cBestAttack=4;

//Return the effective attack interval of PUID against TPUID.
mutable float GetAttackInterval(int nPUID=-1, int nTargetPUID=-1,  int nCultureStart=-1){}

//Test whether PUID is a member of an abstract PUID.
mutable bool GetProtoUnitIsType(int nPUID=-1, int nTest=-1,  int nCultureStart=-1){}

//Return Hack/Pierce/Crush armor of PUID as a vector
mutable vector GetProtoUnitArmor(int nPUID=-1, int nOwner=-1,  int nCultureStart=-1){}

//Return the amount of damage done by a single attack of nOwner's nPUID against nTargetOwner's nTargetPUID.
mutable float GetAttackDamage(int nPUID=-1, int nOwner=-1, int nTargetPUID=-1, int nTargetOwner=-1, int nAttackType=cBestAttack,  int nCultureStart=-1){}

//Return the initial amount of food in nPUID. 1000 might be infinite.
mutable int GetFoodContent(int nPUID=-1) {}

//Return the initial amount of wood in nPUID. 1000 might be infinite.
mutable int GetWoodContent(int nPUID=-1) {}

//Return the current gather rate for nPUID for the target: a logical type (Gold, Wood, WildCrops, cUnitTypeGaiaForesttree etc) or a cResourceType for autogather.
//Use cUnitTypeFarm for farming rates, not anything else.
mutable int GetGatherRate(int nPUID=-1, int nTargetType=-1) {}

//Return the initial amount of Gold in nPUID. 1000 might be infinite.
mutable int GetGoldContent(int nPUID=-1) {}

//Return the movement speed of nPUID. Returns 0.0 or a negative value of they don't move.
mutable float GetUnitSpeed(int nPUID=-1, int nOwner=-1,  int nCultureStart=-1){}

//Return the train points for nPUID. Returns 0.0 or a negative value of they don't have a value.
mutable float GetUnitTrainPoints(int nPUID=-1, int nOwner=-1,  int nCultureStart=-1){}

// Returns the research points of techID.
mutable int GetTechResearchPoints(int techID=-1) {}

float Chineselookup_GetAttackInterval(int nPUID=-1, int nTargetPUID=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 826:
		{
			return(1.500000);
			break;
		}
		case 834:
		{
			return(2.000000);
			break;
		}
		case 851:
		{
			return(1.833125);
			break;
		}
		case 813:
		{
			return(-2.0);
			break;
		}
		case 837:
		{
			return(-2.0);
			break;
		}
		case 824:
		{
			return(-2.0);
			break;
		}
		case 832:
		{
			return(-2.0);
			break;
		}
		case 823:
		{
			return(1.400000);
			break;
		}
		case 847:
		{
			return(2.000000);
			break;
		}
		case 833:
		{
			return(-2.0);
			break;
		}
		case 816:
		{
			return(-2.0);
			break;
		}
		case 852:
		{
			return(1.666667);
			break;
		}
		case 831:
		{
			return(1.000000);
			break;
		}
		case 444:
		{
			return(1.000000);
			break;
		}
		case 830:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnitArcher) ||
				GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher) ||
				GetProtoUnitIsType(nTargetPUID, cUnitTypeShip) ||
				GetProtoUnitIsType(nTargetPUID, cUnitTypeLogicalTypeNavalMilitary) ||
				nTargetPUID == 491 ||
				GetProtoUnitIsType(nTargetPUID, cUnitTypeFlyingUnit) ||
				nTargetPUID == 500 ||
				nTargetPUID == 501 ||
				nTargetPUID == 550 ||
				nTargetPUID == 511 ||
				nTargetPUID == 497 ||
				nTargetPUID == 648 ||
				nTargetPUID == 587	)
			{
				return(4.000000);
			}
			return(2.000000);
			break;
		}
		case 815:
		{
			return(-2.0);
			break;
		}
		case 842:
		{
			return(1.600000);
			break;
		}
		case 848:
		{
			return(4.000000);
			break;
		}
		case 846:
		{
			return(1.500000);
			break;
		}
		case 924:
		{
			return(8.666667);
			break;
		}
		case 878:
		{
			return(3.000000);
			break;
		}
		case 850:
		{
			return(2.000000);
			break;
		}
		case 926:
		{
			return(1.500000);
			break;
		}
		case 825:
		{
			return(2.000000);
			break;
		}
		case 836:
		{
			return(-2.0);
			break;
		}
		case 843:
		{
			return(2.000000);
			break;
		}
		case 827:
		{
			return(-2.0);
			break;
		}
		case 845:
		{
			return(1.000000);
			break;
		}
		case 814:
		{
			return(-2.0);
			break;
		}
		case 819:
		{
			return(1.000000); // Chu Ko Nu attacks twice per animation
			break;
		}
		case 818:
		{
			return(1.000000);
			break;
		}
		case 829:
		{
			return(2.666667);
			break;
		}
		case 835:
		{
			return(2.000000);
			break;
		}
		case 849:
		{
			return(0.900000);
			break;
		}
		case 807:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHuntable)	)
			{
				return(2.000000);
			}
			return(1.000000);
			break;
		}
		case 828:
		{
			return(8.666667);
			break;
		}
	}
	return(-1.0);
}

float Egyptianlookup_GetAttackInterval(int nPUID=-1, int nTargetPUID=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 539:
		{
			return(-2.0);
			break;
		}
		case 446:
		{
			return(-2.0);
			break;
		}
		case 577:
		{
			return(1.200000);
			break;
		}
		case 521:
		{
			return(-2.0);
			break;
		}
		case 520:
		{
			return(-2.0);
			break;
		}
		case 573:
		{
			return(1.000000);
			break;
		}
		case 359:
		{
			return(1.000000);
			break;
		}
		case 519:
		{
			return(-2.0);
			break;
		}
		case 518:
		{
			return(-2.0);
			break;
		}
		case 357:
		{
			return(1.000000);
			break;
		}
		case 392:
		{
			return(10.000000);
			break;
		}
		case 424:
		{
			return(1.400000);
			break;
		}
		case 497:
		{
			return(1.200000);
			break;
		}
		case 673:
		{
			return(1.000000);
			break;
		}
		case 415:
		{
			return(2.700000);
			break;
		}
		case 558:
		{
			return(-2.0);
			break;
		}
		case 427:
		{
			return(-2.0);
			break;
		}
		case 912:
		{
			return(2.000000);
			break;
		}
		case 592:
		{
			return(1.500000);
			break;
		}
		case 677:
		{
			return(1.100000);
			break;
		}
		case 380:
		{
			return(2.000000);
			break;
		}
		case 528:
		{
			return(1.000000);
			break;
		}
		case 499:
		{
			return(-2.0);
			break;
		}
		case 537:
		{
			return(3.000000);
			break;
		}
		case 744:
		{
			return(2.700000);
			break;
		}
		case 439:
		{
			return(1.500000);
			break;
		}
		case 676:
		{
			return(1.000000);
			break;
		}
		case 674:
		{
			return(1.850000);
			break;
		}
		case 513:
		{
			return(1.200000);
			break;
		}
		case 418:
		{
			return(2.250000);
			break;
		}
		case 473:
		{
			return(1.000000);
			break;
		}
		case 630:
		{
			return(1.300000);
			break;
		}
		case 617:
		{
			return(1.400000);
			break;
		}
		case 648:
		{
			return(1.200000);
			break;
		}
		case 517:
		{
			return(1.000000);
			break;
		}
		case 511:
		{
			return(0.800000);
			break;
		}
		case 579:
		{
			return(-2.0);
			break;
		}
		case 370:
		{
			return(-2.0);
			break;
		}
		case 587:
		{
			return(-2.0);
			break;
		}
		case 361:
		{
			return(-2.0);
			break;
		}
		case 652:
		{
			return(3.000000);
			break;
		}
		case 364:
		{
			return(-2.0);
			break;
		}
		case 356:
		{
			return(1.100000);
			break;
		}
		case 672:
		{
			return(1.000000);
			break;
		}
		case 355:
		{
			return(1.000000);
			break;
		}
		case 385:
		{
			return(-2.0);
			break;
		}
		case 602:
		{
			return(-2.0);
			break;
		}
		case 571:
		{
			return(2.000000);
			break;
		}
		case 398:
		{
			return(1.660000);
			break;
		}
		case 447:
		{
			return(0.800000);
			break;
		}
		case 678:
		{
			return(1.400000);
			break;
		}
		case 425:
		{
			return(-2.0);
			break;
		}
		case 490:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHuntable)	)
			{
				return(2.000000);
			}
			return(1.000000);
			break;
		}
		case 498:
		{
			return(-2.0);
			break;
		}
		case 378:
		{
			return(1.500000);
			break;
		}
		case 675:
		{
			return(1.350000);
			break;
		}
		case 512:
		{
			return(-2.0);
			break;
		}
		case 545:
		{
			return(-2.0);
			break;
		}
		case 593:
		{
			return(-2.0);
			break;
		}
	}
	return(-1.0);
}

float Norselookup_GetAttackInterval(int nPUID=-1, int nTargetPUID=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 570:
		{
			return(2.000000);
			break;
		}
		case 394:
		{
			return(1.500000);
			break;
		}
		case 576:
		{
			return(-2.0);
			break;
		}
		case 531:
		{
			return(1.000000);
			break;
		}
		case 582:
		{
			return(2.000000);
			break;
		}
		case 749:
		{
			return(2.000000);
			break;
		}
		case 387:
		{
			return(0.600000); // Fire Giant attacks twice per animation
			break;
		}
		case 583:
		{
			return(1.300000);
			break;
		}
		case 474:
		{
			return(-2.0);
			break;
		}
		case 495:
		{
			return(1.300000);
			break;
		}
		case 360:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHuntable)	)
			{
				return(2.000000);
			}
			return(1.000000);
			break;
		}
		case 627:
		{
			return(1.000000);
			break;
		}
		case 930:
		{
			return(2.000000);
			break;
		}
		case 379:
		{
			return(4.000000);
			break;
		}
		case 538:
		{
			return(3.000000);
			break;
		}
		case 584:
		{
			return(2.000000);
			break;
		}
		case 395:
		{
			return(1.300000);
			break;
		}
		case 393:
		{
			return(-2.0);
			break;
		}
		case 543:
		{
			return(-2.0);
			break;
		}
		case 581:
		{
			return(2.000000);
			break;
		}
		case 750:
		{
			return(2.000000);
			break;
		}
		case 585:
		{
			return(1.750000);
			break;
		}
		case 484:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHuntable)	)
			{
				return(2.000000);
			}
			return(1.000000);
			break;
		}
		case 399:
		{
			return(2.350000);
			break;
		}
		case 397:
		{
			return(3.600000);
			break;
		}
		case 358:
		{
			return(1.350000);
			break;
		}
		case 613:
		{
			return(-2.0);
			break;
		}
		case 485:
		{
			return(-2.0);
			break;
		}
		case 491:
		{
			return(1.300000);
			break;
		}
		case 929:
		{
			return(2.000000);
			break;
		}
		case 488:
		{
			return(1.200000);
			break;
		}
		case 580:
		{
			return(2.000000);
			break;
		}
		case 911:
		{
			return(1.000000);
			break;
		}
		case 396:
		{
			return(1.000000);
			break;
		}
		case 493:
		{
			return(1.000000);
			break;
		}
		case 686:
		{
			return(2.000000);
			break;
		}
		case 572:
		{
			return(1.000000);
			break;
		}
		case 604:
		{
			return(2.000000);
			break;
		}
		case 390:
		{
			return(1.500000);
			break;
		}
		case 931:
		{
			return(2.000000);
			break;
		}
		case 489:
		{
			return(-2.0);
			break;
		}
		case 492:
		{
			return(0.700000);
			break;
		}
		case 400:
		{
			return(1.000000);
			break;
		}
		case 481:
		{
			return(-2.0);
			break;
		}
		case 589:
		{
			return(1.500000);
			break;
		}
	}
	return(-1.0);
}

float Greeklookup_GetAttackInterval(int nPUID=-1, int nTargetPUID=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 578:
		{
			return(2.000000);
			break;
		}
		case 557:
		{
			return(-2.0);
			break;
		}
		case 542:
		{
			return(1.500000);
			break;
		}
		case 426:
		{
			return(2.000000);
			break;
		}
		case 487:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHuntable)	)
			{
				return(2.000000);
			}
			return(1.000000);
			break;
		}
		case 507:
		{
			return(1.300000);
			break;
		}
		case 401:
		{
			return(3.000000);
			break;
		}
		case 506:
		{
			return(1.350000);
			break;
		}
		case 368:
		{
			return(-2.0);
			break;
		}
		case 500:
		{
			return(1.200000);
			break;
		}
		case 541:
		{
			return(1.200000);
			break;
		}
		case 377:
		{
			return(-2.0);
			break;
		}
		case 575:
		{
			return(-2.0);
			break;
		}
		case 486:
		{
			return(-2.0);
			break;
		}
		case 508:
		{
			return(1.000000);
			break;
		}
		case 625:
		{
			return(-2.0);
			break;
		}
		case 553:
		{
			return(0.950000);
			break;
		}
		case 503:
		{
			return(1.150000);
			break;
		}
		case 510:
		{
			return(2.000000);
			break;
		}
		case 514:
		{
			return(1.800000);
			break;
		}
		case 658:
		{
			return(2.000000);
			break;
		}
		case 471:
		{
			return(-2.0);
			break;
		}
		case 496:
		{
			return(1.000000);
			break;
		}
		case 416:
		{
			return(0.950000);
			break;
		}
		case 445:
		{
			return(-2.0);
			break;
		}
		case 586:
		{
			return(-2.0);
			break;
		}
		case 910:
		{
			return(-2.0);
			break;
		}
		case 472:
		{
			return(1.500000);
			break;
		}
		case 420:
		{
			return(1.500000);
			break;
		}
		case 555:
		{
			return(1.500000);
			break;
		}
		case 423:
		{
			return(1.300000);
			break;
		}
		case 536:
		{
			return(-2.0);
			break;
		}
		case 628:
		{
			return(1.000000);
			break;
		}
		case 554:
		{
			return(1.400000);
			break;
		}
		case 622:
		{
			return(-2.0);
			break;
		}
		case 504:
		{
			return(1.300000);
			break;
		}
		case 364:
		{
			return(-2.0);
			break;
		}
		case 369:
		{
			return(-2.0);
			break;
		}
		case 567:
		{
			return(2.000000);
			break;
		}
		case 552:
		{
			return(1.250000);
			break;
		}
		case 515:
		{
			return(1.000000);
			break;
		}
		case 594:
		{
			return(1.200000);
			break;
		}
		case 502:
		{
			return(1.500000);
			break;
		}
		case 501:
		{
			return(1.500000);
			break;
		}
		case 551:
		{
			return(1.000000);
			break;
		}
		case 402:
		{
			return(-2.0);
			break;
		}
		case 417:
		{
			return(1.000000);
			break;
		}
		case 568:
		{
			return(1.000000);
			break;
		}
		case 373:
		{
			return(1.200000);
			break;
		}
		case 550:
		{
			return(2.000000);
			break;
		}
		case 509:
		{
			return(8.300000);
			break;
		}
		case 505:
		{
			return(1.000000);
			break;
		}
		case 419:
		{
			return(1.000000);
			break;
		}
	}
	return(-1.0);
}

float Commonlookup_GetAttackInterval(int nPUID=-1, int nTargetPUID=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 480:
		{
			return(-2.0);
			break;
		}
		case 391:
		{
			return(-2.0);
			break;
		}
		case 363:
		{
			return(-2.0);
			break;
		}
		case 438:
		{
			return(-2.0);
			break;
		}
		case 656:
		{
			return(-2.0);
			break;
		}
		case 362:
		{
			return(-2.0);
			break;
		}
		case 710:
		{
			return(-2.0);
			break;
		}
		case 465:
		{
			return(-2.0);
			break;
		}
		case 365:
		{
			return(-2.0);
			break;
		}
		case 366:
		{
			return(-2.0);
			break;
		}
		case 469:
		{
			return(-2.0);
			break;
		}
		case 437:
		{
			return(-2.0);
			break;
		}
		case 464:
		{
			return(-2.0);
			break;
		}
		case 367:
		{
			return(-2.0);
			break;
		}
		case 372:
		{
			return(-2.0);
			break;
		}
	}
	return(-1.0);
}

float Otherslookup_GetAttackInterval(int nPUID=-1, int nTargetPUID=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 752:
		{
			return(1.000000);
			break;
		}
		case 612:
		{
			return(-2.0);
			break;
		}
		case 620:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHuntable)	)
			{
				return(2.000000);
			}
			return(1.000000);
			break;
		}
		case 452:
		{
			return(1.000000);
			break;
		}
		case 467:
		{
			return(1.400000);
			break;
		}
		case 812:
		{
			return(1.300000);
			break;
		}
		case 436:
		{
			return(0.800000);
			break;
		}
		case 413:
		{
			return(1.000000);
			break;
		}
		case 374:
		{
			return(-2.0);
			break;
		}
		case 564:
		{
			return(-2.0);
			break;
		}
		case 382:
		{
			return(1.000000);
			break;
		}
		case 591:
		{
			return(0.800000);
			break;
		}
		case 927:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnitArcher) ||
				GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher) ||
				GetProtoUnitIsType(nTargetPUID, cUnitTypeShip) ||
				GetProtoUnitIsType(nTargetPUID, cUnitTypeLogicalTypeNavalMilitary) ||
				nTargetPUID == 491 ||
				GetProtoUnitIsType(nTargetPUID, cUnitTypeFlyingUnit)	)
			{
				return(4.000000);
			}
			return(2.000000);
			break;
		}
		case 793:
		{
			return(-2.0);
			break;
		}
		case 779:
		{
			return(-2.0);
			break;
		}
		case 525:
		{
			return(-2.0);
			break;
		}
		case 882:
		{
			return(1.866667);
			break;
		}
		case 855:
		{
			return(1.150000);
			break;
		}
		case 880:
		{
			return(-2.0);
			break;
		}
		case 684:
		{
			return(2.000000);
			break;
		}
		case 730:
		{
			return(-2.0);
			break;
		}
		case 776:
		{
			return(-2.0);
			break;
		}
		case 629:
		{
			return(0.900000);
			break;
		}
		case 900:
		{
			return(-2.0);
			break;
		}
		case 905:
		{
			return(-2.0);
			break;
		}
		case 860:
		{
			return(2.500000);
			break;
		}
		case 544:
		{
			return(-2.0);
			break;
		}
		case 375:
		{
			return(1.750000);
			break;
		}
		case 432:
		{
			return(1.100000);
			break;
		}
		case 889:
		{
			return(1.000000);
			break;
		}
		case 434:
		{
			return(1.200000);
			break;
		}
		case 901:
		{
			return(-2.0);
			break;
		}
		case 902:
		{
			return(-2.0);
			break;
		}
		case 182:
		{
			return(-2.0);
			break;
		}
		case 771:
		{
			return(-2.0);
			break;
		}
		case 408:
		{
			return(-2.0);
			break;
		}
		case 459:
		{
			return(1.600000);
			break;
		}
		case 753:
		{
			return(-2.0);
			break;
		}
		case 859:
		{
			return(2.500000);
			break;
		}
		case 460:
		{
			return(1.000000);
			break;
		}
		case 803:
		{
			return(1.600000);
			break;
		}
		case 751:
		{
			return(-2.0);
			break;
		}
		case 760:
		{
			return(1.500000);
			break;
		}
		case 574:
		{
			return(2.000000);
			break;
		}
		case 646:
		{
			return(-2.0);
			break;
		}
		case 800:
		{
			return(1.500000);
			break;
		}
		case 796:
		{
			return(-2.0);
			break;
		}
		case 903:
		{
			return(-2.0);
			break;
		}
		case 614:
		{
			return(-2.0);
			break;
		}
		case 801:
		{
			return(0.750000);
			break;
		}
		case 650:
		{
			return(2.250000);
			break;
		}
		case 747:
		{
			return(1.000000);
			break;
		}
		case 774:
		{
			return(0.800000);
			break;
		}
		case 788:
		{
			return(1.000000);
			break;
		}
		case 414:
		{
			return(1.500000);
			break;
		}
		case 728:
		{
			return(-2.0);
			break;
		}
		case 607:
		{
			return(-2.0);
			break;
		}
		case 660:
		{
			return(3.000000);
			break;
		}
		case 206:
		{
			return(-2.0);
			break;
		}
		case 907:
		{
			return(-2.0);
			break;
		}
		case 389:
		{
			return(1.000000);
			break;
		}
		case 802:
		{
			return(0.700000);
			break;
		}
		case 597:
		{
			return(2.000000);
			break;
		}
		case 605:
		{
			return(1.000000);
			break;
		}
		case 569:
		{
			return(2.000000);
			break;
		}
		case 596:
		{
			return(-2.0);
			break;
		}
		case 516:
		{
			return(1.000000);
			break;
		}
		case 381:
		{
			return(1.350000);
			break;
		}
		case 456:
		{
			return(2.250000);
			break;
		}
		case 898:
		{
			return(-2.0);
			break;
		}
		case 917:
		{
			return(1.500000);
			break;
		}
		case 556:
		{
			return(1.000000);
			break;
		}
		case 777:
		{
			return(1.000000);
			break;
		}
		case 754:
		{
			return(-2.0);
			break;
		}
		case 606:
		{
			return(1.600000);
			break;
		}
		case 661:
		{
			return(1.000000);
			break;
		}
		case 772:
		{
			return(1.100000);
			break;
		}
		case 928:
		{
			return(0.900000);
			break;
		}
		case 457:
		{
			return(1.100000);
			break;
		}
		case 858:
		{
			return(0.800000);
			break;
		}
		case 608:
		{
			return(1.500000);
			break;
		}
		case 821:
		{
			return(-2.0);
			break;
		}
		case 799:
		{
			return(1.750000);
			break;
		}
		case 463:
		{
			return(1.500000);
			break;
		}
		case 916:
		{
			return(-2.0);
			break;
		}
		case 477:
		{
			return(1.500000);
			break;
		}
		case 640:
		{
			return(-2.0);
			break;
		}
		case 787:
		{
			return(1.500000);
			break;
		}
		case 476:
		{
			return(1.500000);
			break;
		}
		case 654:
		{
			return(-2.0);
			break;
		}
		case 665:
		{
			return(1.500000);
			break;
		}
		case 822:
		{
			return(2.250000);
			break;
		}
		case 429:
		{
			return(0.950000);
			break;
		}
		case 405:
		{
			return(1.400000);
			break;
		}
		case 619:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHuntable)	)
			{
				return(2.000000);
			}
			return(1.000000);
			break;
		}
		case 636:
		{
			return(1.000000);
			break;
		}
		case 535:
		{
			return(-2.0);
			break;
		}
		case 856:
		{
			return(3.000000);
			break;
		}
		case 904:
		{
			return(-2.0);
			break;
		}
		case 679:
		{
			return(3.600000);
			break;
		}
		case 773:
		{
			return(0.950000);
			break;
		}
		case 844:
		{
			return(-2.0);
			break;
		}
		case 600:
		{
			return(-2.0);
			break;
		}
		case 193:
		{
			return(-2.0);
			break;
		}
		case 560:
		{
			return(-2.0);
			break;
		}
		case 798:
		{
			return(2.000000);
			break;
		}
		case 881:
		{
			return(2.000000);
			break;
		}
		case 409:
		{
			return(1.500000);
			break;
		}
		case 653:
		{
			return(2.000000);
			break;
		}
		case 657:
		{
			return(-2.0);
			break;
		}
		case 683:
		{
			return(1.000000);
			break;
		}
		case 410:
		{
			return(1.300000);
			break;
		}
		case 795:
		{
			return(-2.0);
			break;
		}
		case 411:
		{
			return(1.000000);
			break;
		}
		case 854:
		{
			return(1.200000);
			break;
		}
		case 422:
		{
			return(1.000000);
			break;
		}
		case 884:
		{
			return(-2.0);
			break;
		}
		case 524:
		{
			return(-2.0);
			break;
		}
		case 624:
		{
			return(0.700000);
			break;
		}
		case 431:
		{
			return(0.850000);
			break;
		}
		case 853:
		{
			return(1.500000);
			break;
		}
		case 134:
		{
			return(-2.0);
			break;
		}
		case 817:
		{
			return(1.000000);
			break;
		}
		case 590:
		{
			return(-2.0);
			break;
		}
		case 785:
		{
			return(-2.0);
			break;
		}
		case 433:
		{
			return(1.200000);
			break;
		}
		case 875:
		{
			return(1.400000);
			break;
		}
		case 435:
		{
			return(1.500000);
			break;
		}
		case 615:
		{
			return(-2.0);
			break;
		}
		case 890:
		{
			return(1.666667);
			break;
		}
		case 386:
		{
			return(1.300000);
			break;
		}
		case 450:
		{
			return(-2.0);
			break;
		}
		case 540:
		{
			return(1.000000);
			break;
		}
		case 666:
		{
			return(1.300000);
			break;
		}
		case 668:
		{
			return(1.000000);
			break;
		}
		case 404:
		{
			return(-2.0);
			break;
		}
		case 529:
		{
			return(3.000000);
			break;
		}
		case 761:
		{
			return(-2.0);
			break;
		}
		case 877:
		{
			return(1.750000);
			break;
		}
		case 458:
		{
			return(1.850000);
			break;
		}
		case 820:
		{
			return(1.350000);
			break;
		}
		case 603:
		{
			return(1.300000);
			break;
		}
		case 443:
		{
			return(-2.0);
			break;
		}
		case 546:
		{
			return(-2.0);
			break;
		}
		case 634:
		{
			return(-2.0);
			break;
		}
		case 626:
		{
			return(1.100000);
			break;
		}
		case 595:
		{
			return(1.200000);
			break;
		}
		case 412:
		{
			return(1.000000);
			break;
		}
		case 530:
		{
			return(-2.0);
			break;
		}
		case 651:
		{
			return(1.000000);
			break;
		}
		case 479:
		{
			return(1.000000);
			break;
		}
		case 741:
		{
			return(0.800000);
			break;
		}
		case 430:
		{
			return(1.000000);
			break;
		}
		case 208:
		{
			return(-2.0);
			break;
		}
		case 664:
		{
			return(-2.0);
			break;
		}
		case 797:
		{
			return(1.750000);
			break;
		}
		case 906:
		{
			return(-2.0);
			break;
		}
	}
	return(-1.0);
}

float Atlanteanlookup_GetAttackInterval(int nPUID=-1, int nTargetPUID=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 732:
		{
			return(1.500000);
			break;
		}
		case 703:
		{
			return(2.000000);
			break;
		}
		case 699:
		{
			return(2.000000);
			break;
		}
		case 714:
		{
			return(1.250000);
			break;
		}
		case 691:
		{
			return(0.800000);
			break;
		}
		case 727:
		{
			return(1.000000);
			break;
		}
		case 701:
		{
			return(1.500000);
			break;
		}
		case 704:
		{
			return(1.750000);
			break;
		}
		case 711:
		{
			return(-2.0);
			break;
		}
		case 692:
		{
			return(1.330000);
			break;
		}
		case 697:
		{
			return(-2.0);
			break;
		}
		case 734:
		{
			return(0.550000); // Heka Gigantes attacks twice per animation
			break;
		}
		case 715:
		{
			return(1.250000);
			break;
		}
		case 729:
		{
			return(1.000000);
			break;
		}
		case 689:
		{
			return(-2.0);
			break;
		}
		case 690:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHuntable)	)
			{
				return(2.000000);
			}
			return(1.000000);
			break;
		}
		case 716:
		{
			return(2.000000);
			break;
		}
		case 726:
		{
			return(1.000000);
			break;
		}
		case 717:
		{
			return(2.000000);
			break;
		}
		case 713:
		{
			return(1.000000);
			break;
		}
		case 737:
		{
			return(-2.0);
			break;
		}
		case 731:
		{
			return(1.000000);
			break;
		}
		case 698:
		{
			return(1.500000);
			break;
		}
		case 709:
		{
			return(-2.0);
			break;
		}
		case 712:
		{
			return(1.000000);
			break;
		}
		case 725:
		{
			return(1.000000);
			break;
		}
		case 720:
		{
			return(-2.0);
			break;
		}
		case 722:
		{
			return(1.000000); // Behemoth has +50% attack speed
			break;
		}
		case 688:
		{
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHuntable)	)
			{
				return(2.000000);
			}
			return(1.000000);
			break;
		}
		case 694:
		{
			return(0.800000);
			break;
		}
		case 696:
		{
			return(2.000000);
			break;
		}
		case 757:
		{
			return(-2.0);
			break;
		}
		case 695:
		{
			return(-2.0);
			break;
		}
		case 745:
		{
			return(-2.0);
			break;
		}
		case 719:
		{
			return(1.300000);
			break;
		}
		case 746:
		{
			return(-2.0);
			break;
		}
		case 700:
		{
			return(1.500000);
			break;
		}
		case 913:
		{
			return(2.000000);
			break;
		}
		case 739:
		{
			return(1.000000);
			break;
		}
		case 724:
		{
			return(-2.0);
			break;
		}
		case 702:
		{
			return(-2.0);
			break;
		}
		case 706:
		{
			return(-2.0);
			break;
		}
		case 738:
		{
			return(-2.0);
			break;
		}
		case 723:
		{
			return(-2.0);
			break;
		}
		case 718:
		{
			return(1.300000);
			break;
		}
		case 693:
		{
			return(1.330000);
			break;
		}
		case 707:
		{
			return(1.130000);
			break;
		}
		case 705:
		{
			return(-2.0);
			break;
		}
		case 740:
		{
			return(2.000000);
			break;
		}
		case 708:
		{
			return(1.130000);
			break;
		}
	}
	return(-1.0);
}

float GetAttackInterval(int nPUID=-1, int nTargetPUID=-1, int nCultureStart=-1)
{
	float retval = -1.0;
	if (nCultureStart==cCultureGreek) { retval = Greeklookup_GetAttackInterval(nPUID, nTargetPUID); }
	else if (nCultureStart==cCultureEgyptian) { retval = Egyptianlookup_GetAttackInterval(nPUID, nTargetPUID); }
	else if (nCultureStart==cCultureNorse) { retval = Norselookup_GetAttackInterval(nPUID, nTargetPUID); }
	else if (nCultureStart==cCultureAtlantean) { retval = Atlanteanlookup_GetAttackInterval(nPUID, nTargetPUID); }
	else if (nCultureStart==cCultureChinese) { retval = Chineselookup_GetAttackInterval(nPUID, nTargetPUID); }
	if (retval == -1.0 && nCultureStart != cCultureGreek) { retval = Greeklookup_GetAttackInterval(nPUID, nTargetPUID); }
	if (retval == -1.0 && nCultureStart != cCultureEgyptian) { retval = Egyptianlookup_GetAttackInterval(nPUID, nTargetPUID); }
	if (retval == -1.0 && nCultureStart != cCultureNorse) { retval = Norselookup_GetAttackInterval(nPUID, nTargetPUID); }
	if (retval == -1.0 && nCultureStart != cCultureAtlantean) { retval = Atlanteanlookup_GetAttackInterval(nPUID, nTargetPUID); }
	if (retval == -1.0 && nCultureStart != cCultureChinese) { retval = Chineselookup_GetAttackInterval(nPUID, nTargetPUID); }
	if (retval == -1.0) { retval = Otherslookup_GetAttackInterval(nPUID, nTargetPUID); }
	return(retval);
}
bool Chineselookup_GetProtoUnitIsType(int nPUID=-1, int nTest=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 826:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 834:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHammerShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			break;
		}
		case 851:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 813:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFoodDropsite) { return(true);}
			if (nTest == cUnitTypeGoldDropsite) { return(true);}
			if (nTest == cUnitTypeWoodDropsite) { return(true);}
			if (nTest == cUnitTypeDropsite) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeEarlyFoodDropsite) { return(true);}
			if (nTest == cUnitTypeEarlyWoodDropsite) { return(true);}
			if (nTest == cUnitTypeEarlyGoldDropsite) { return(true);}
			break;
		}
		case 837:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			if (nTest == cUnitTypeAbstractTradeUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 824:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 832:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeUtilityShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 823:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 847:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 833:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeArcherShip) { return(true);}
			break;
		}
		case 816:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractMonument) { return(true);}
			if (nTest == cUnitTypeSharedBuilding) { return(true);}
			break;
		}
		case 852:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 831:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 444:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractScout) { return(true);}
			break;
		}
		case 830:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 815:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractStable) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			break;
		}
		case 842:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 848:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			break;
		}
		case 846:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 924:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			break;
		}
		case 878:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 850:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeFlyingUnit) { return(true);}
			break;
		}
		case 926:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 825:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 836:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeTransport) { return(true);}
			if (nTest == cUnitTypeTransportShip) { return(true);}
			break;
		}
		case 843:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 827:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractFortress) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			break;
		}
		case 845:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			break;
		}
		case 814:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractBarracks) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			break;
		}
		case 819:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 818:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 829:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			break;
		}
		case 835:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeSiegeShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			break;
		}
		case 849:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 807:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMeanPredatorsAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeAbstractVillager) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 828:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			break;
		}
	}
	return(false);
}

bool Egyptianlookup_GetProtoUnitIsType(int nPUID=-1, int nTest=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 539:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			break;
		}
		case 446:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			break;
		}
		case 577:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 521:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractMonument) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			break;
		}
		case 520:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractMonument) { return(true);}
			break;
		}
		case 573:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeSiegeShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			break;
		}
		case 359:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 519:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractMonument) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			break;
		}
		case 518:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractMonument) { return(true);}
			break;
		}
		case 357:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 392:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			break;
		}
		case 424:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 497:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractPharaoh) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 673:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeSetAnimal) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			break;
		}
		case 415:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeFlyingUnit) { return(true);}
			break;
		}
		case 558:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeAbstractTradeUnit) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 427:
		{
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			break;
		}
		case 912:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 592:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnitArcher) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 677:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeSetAnimal) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			break;
		}
		case 380:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			break;
		}
		case 528:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeAutoupgradedUnit) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			break;
		}
		case 499:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeDropsite) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeGoldDropsite) { return(true);}
			if (nTest == cUnitTypeWoodDropsite) { return(true);}
			if (nTest == cUnitTypeEarlyGoldDropsite) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			break;
		}
		case 537:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeArcherShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 744:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeFlyingUnit) { return(true);}
			break;
		}
		case 439:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeTransport) { return(true);}
			break;
		}
		case 676:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeSetAnimal) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 674:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			if (nTest == cUnitTypeSetAnimal) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 513:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			break;
		}
		case 418:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 473:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			break;
		}
		case 630:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 617:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 648:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractPharaoh) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 517:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeAutoupgradedUnit) { return(true);}
			break;
		}
		case 511:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeAbstractScout) { return(true);}
			break;
		}
		case 579:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractSettlement) { return(true);}
			if (nTest == cUnitTypeDropsite) { return(true);}
			if (nTest == cUnitTypeFoodDropsite) { return(true);}
			if (nTest == cUnitTypeGoldDropsite) { return(true);}
			if (nTest == cUnitTypeWoodDropsite) { return(true);}
			if (nTest == cUnitTypeTradeableTo) { return(true);}
			if (nTest == cUnitTypeSettlementsThatTrainVillagers) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			break;
		}
		case 370:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractMonument) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			break;
		}
		case 587:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractPharaoh) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 361:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractBarracks) { return(true);}
			if (nTest == cUnitTypeAbstractArcheryRange) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			break;
		}
		case 652:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeArcherShip) { return(true);}
			break;
		}
		case 364:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeDropsite) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeFoodDropsite) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeEarlyFoodDropsite) { return(true);}
			break;
		}
		case 356:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 672:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeSetAnimal) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 355:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 385:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			break;
		}
		case 602:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 571:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHammerShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			break;
		}
		case 398:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 447:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 678:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			if (nTest == cUnitTypeSetAnimal) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 425:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeFlyingUnit) { return(true);}
			if (nTest == cUnitTypeTransport) { return(true);}
			break;
		}
		case 490:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMeanPredatorsAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeAbstractVillager) { return(true);}
			break;
		}
		case 498:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeEarlyWoodDropsite) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeDropsite) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeWoodDropsite) { return(true);}
			break;
		}
		case 378:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			break;
		}
		case 675:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeSetAnimal) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			break;
		}
		case 512:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			if (nTest == cUnitTypeAbstractFortress) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			break;
		}
		case 545:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeTransport) { return(true);}
			if (nTest == cUnitTypeTransportShip) { return(true);}
			break;
		}
		case 593:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitArcher) { return(true);}
			break;
		}
	}
	return(false);
}

bool Norselookup_GetProtoUnitIsType(int nPUID=-1, int nTest=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 570:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeHammerShip) { return(true);}
			break;
		}
		case 394:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitArcher) { return(true);}
			break;
		}
		case 576:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			break;
		}
		case 531:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 582:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 749:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 387:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 583:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 474:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeFlyingUnit) { return(true);}
			if (nTest == cUnitTypeAbstractScout) { return(true);}
			break;
		}
		case 495:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeLokiHero) { return(true);}
			break;
		}
		case 360:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMeanPredatorsAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractVillager) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 627:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnitArcher) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 930:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 379:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 538:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeArcherShip) { return(true);}
			break;
		}
		case 584:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeFlyingUnit) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 395:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 393:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeAbstractTradeUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 543:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeUtilityShip) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 581:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 750:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 585:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 484:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMeanPredatorsAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeAbstractVillager) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 399:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 397:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 358:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 613:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeTransportShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeTransport) { return(true);}
			break;
		}
		case 485:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractBarracks) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			break;
		}
		case 491:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			break;
		}
		case 929:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 488:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			break;
		}
		case 580:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 911:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 396:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			break;
		}
		case 493:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 686:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 572:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeSiegeShip) { return(true);}
			break;
		}
		case 604:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 390:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 931:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 489:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractFortress) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			break;
		}
		case 492:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeAbstractScout) { return(true);}
			break;
		}
		case 400:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 481:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeDropsite) { return(true);}
			if (nTest == cUnitTypeFoodDropsite) { return(true);}
			if (nTest == cUnitTypeGoldDropsite) { return(true);}
			if (nTest == cUnitTypeWoodDropsite) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeEarlyFoodDropsite) { return(true);}
			if (nTest == cUnitTypeEarlyGoldDropsite) { return(true);}
			if (nTest == cUnitTypeEarlyWoodDropsite) { return(true);}
			break;
		}
		case 589:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
	}
	return(false);
}

bool Greeklookup_GetProtoUnitIsType(int nPUID=-1, int nTest=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 578:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			break;
		}
		case 557:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			if (nTest == cUnitTypeAbstractTradeUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 542:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 426:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnitArcher) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 487:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMeanPredatorsAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeAbstractVillager) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 507:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 401:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeArcherShip) { return(true);}
			break;
		}
		case 506:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 368:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractStable) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			break;
		}
		case 500:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 541:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 377:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeGoldDropsite) { return(true);}
			if (nTest == cUnitTypeWoodDropsite) { return(true);}
			if (nTest == cUnitTypeDropsite) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeEarlyWoodDropsite) { return(true);}
			if (nTest == cUnitTypeEarlyGoldDropsite) { return(true);}
			break;
		}
		case 575:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeSharedBuilding) { return(true);}
			break;
		}
		case 486:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractBarracks) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			break;
		}
		case 508:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 625:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			break;
		}
		case 553:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 503:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 510:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 514:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 658:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 471:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeFlyingUnit) { return(true);}
			if (nTest == cUnitTypeAbstractScout) { return(true);}
			break;
		}
		case 496:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 416:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnitArcher) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 445:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractArcheryRange) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			break;
		}
		case 586:
		{
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			break;
		}
		case 910:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAutoupgradedUnit) { return(true);}
			break;
		}
		case 472:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 420:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 555:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 423:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			break;
		}
		case 536:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeTransport) { return(true);}
			if (nTest == cUnitTypeTransportShip) { return(true);}
			break;
		}
		case 628:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			break;
		}
		case 554:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 622:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeAbstractScout) { return(true);}
			break;
		}
		case 504:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 364:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeDropsite) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeFoodDropsite) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeEarlyFoodDropsite) { return(true);}
			break;
		}
		case 369:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractFortress) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			break;
		}
		case 567:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeHammerShip) { return(true);}
			break;
		}
		case 552:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 515:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 594:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 502:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 501:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 551:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 402:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeUtilityShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 417:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 568:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeSiegeShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			break;
		}
		case 373:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			break;
		}
		case 550:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 509:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			break;
		}
		case 505:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 419:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
	}
	return(false);
}

bool Commonlookup_GetProtoUnitIsType(int nPUID=-1, int nTest=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 480:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			if (nTest == cUnitTypeSettlementsThatTrainVillagers) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeTradeableTo) { return(true);}
			if (nTest == cUnitTypeDropsite) { return(true);}
			if (nTest == cUnitTypeFoodDropsite) { return(true);}
			if (nTest == cUnitTypeGoldDropsite) { return(true);}
			if (nTest == cUnitTypeWoodDropsite) { return(true);}
			if (nTest == cUnitTypeAbstractSettlement) { return(true);}
			break;
		}
		case 391:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractWall) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			break;
		}
		case 363:
		{
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			break;
		}
		case 438:
		{
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAbstractWall) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			break;
		}
		case 656:
		{
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractWall) { return(true);}
			break;
		}
		case 362:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeSharedBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeDropsite) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractDock) { return(true);}
			if (nTest == cUnitTypeFoodDropsite) { return(true);}
			break;
		}
		case 710:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			if (nTest == cUnitTypeAbstractTitan) { return(true);}
			break;
		}
		case 465:
		{
			if (nTest == cUnitTypeLogicalTypeHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeSharedBuilding) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			break;
		}
		case 365:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractArmory) { return(true);}
			break;
		}
		case 366:
		{
			if (nTest == cUnitTypeLogicalTypeGates) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractWall) { return(true);}
			break;
		}
		case 469:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			break;
		}
		case 437:
		{
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractWall) { return(true);}
			break;
		}
		case 464:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractTemple) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeSharedBuilding) { return(true);}
			break;
		}
		case 367:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeTradeableFrom) { return(true);}
			if (nTest == cUnitTypeSharedBuilding) { return(true);}
			break;
		}
		case 372:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			break;
		}
	}
	return(false);
}

bool Otherslookup_GetProtoUnitIsType(int nPUID=-1, int nTest=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 752:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 612:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			break;
		}
		case 620:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 452:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 467:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			break;
		}
		case 812:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeDangerousAnimals) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			break;
		}
		case 436:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 413:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			break;
		}
		case 374:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHerdable) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			break;
		}
		case 564:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 382:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			break;
		}
		case 591:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			break;
		}
		case 927:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 793:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 779:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeFlyingUnit) { return(true);}
			break;
		}
		case 525:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			break;
		}
		case 882:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 855:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 880:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHerdable) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			break;
		}
		case 684:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 730:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 776:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractTemple) { return(true);}
			if (nTest == cUnitTypeSharedBuilding) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			break;
		}
		case 629:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 900:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 905:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 860:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			break;
		}
		case 544:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			if (nTest == cUnitTypeUtilityShip) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 375:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeDangerousAnimals) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			break;
		}
		case 432:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 889:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 434:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 901:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 902:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 182:
		{
			return(false);
			break;
		}
		case 771:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 408:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeHerdable) { return(true);}
			break;
		}
		case 459:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			break;
		}
		case 753:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractPharaoh) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 859:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 460:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			break;
		}
		case 803:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			break;
		}
		case 751:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			if (nTest == cUnitTypeAbstractTitan) { return(true);}
			break;
		}
		case 760:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 574:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 646:
		{
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			break;
		}
		case 800:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 796:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			if (nTest == cUnitTypeAbstractTitan) { return(true);}
			break;
		}
		case 903:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 614:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 801:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			break;
		}
		case 650:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 747:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 774:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 788:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 414:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitArcher) { return(true);}
			break;
		}
		case 728:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeFlyingUnit) { return(true);}
			break;
		}
		case 607:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			break;
		}
		case 660:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeArcherShip) { return(true);}
			if (nTest == cUnitTypeTransport) { return(true);}
			if (nTest == cUnitTypeTransportShip) { return(true);}
			break;
		}
		case 206:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 907:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 389:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			break;
		}
		case 802:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeAbstractScout) { return(true);}
			break;
		}
		case 597:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAutoupgradedUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 605:
		{
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			break;
		}
		case 569:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 596:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 516:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 381:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeDangerousAnimals) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			break;
		}
		case 456:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeDangerousAnimals) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			break;
		}
		case 898:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 917:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 556:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 777:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 754:
		{
			break;
		}
		case 606:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			break;
		}
		case 661:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 772:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 928:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 457:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			break;
		}
		case 858:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 608:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 821:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHerdable) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			break;
		}
		case 799:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			break;
		}
		case 463:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			break;
		}
		case 916:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 477:
		{
			break;
		}
		case 640:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			break;
		}
		case 787:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 476:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 654:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractFortress) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			break;
		}
		case 665:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 822:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeDangerousAnimals) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			break;
		}
		case 429:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 405:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			break;
		}
		case 619:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 636:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 535:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			break;
		}
		case 856:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeTransport) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 904:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 679:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 773:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 844:
		{
			break;
		}
		case 600:
		{
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractWall) { return(true);}
			break;
		}
		case 193:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 560:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 798:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 881:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 409:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 653:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAutoupgradedUnit) { return(true);}
			break;
		}
		case 657:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 683:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 410:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			break;
		}
		case 795:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			if (nTest == cUnitTypeAbstractTitan) { return(true);}
			break;
		}
		case 411:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			break;
		}
		case 854:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 422:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			break;
		}
		case 884:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 524:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 624:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 431:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 853:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 134:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			break;
		}
		case 817:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeAbstractScout) { return(true);}
			break;
		}
		case 590:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 785:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractTemple) { return(true);}
			if (nTest == cUnitTypeSharedBuilding) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			break;
		}
		case 433:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 875:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			break;
		}
		case 435:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 615:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 890:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 386:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeDangerousAnimals) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			break;
		}
		case 450:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			break;
		}
		case 540:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMeanPredatorsAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 666:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			break;
		}
		case 668:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 404:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHerdable) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			break;
		}
		case 529:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeTransport) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 761:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			break;
		}
		case 877:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			if (nTest == cUnitTypeSetAnimal) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 458:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeDangerousAnimals) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			break;
		}
		case 820:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeDangerousAnimals) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			break;
		}
		case 603:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeDangerousAnimals) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			break;
		}
		case 443:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 546:
		{
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeAbstractWall) { return(true);}
			break;
		}
		case 634:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			break;
		}
		case 626:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 595:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 412:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			break;
		}
		case 530:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			break;
		}
		case 651:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 479:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPrey) { return(true);}
			break;
		}
		case 741:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			break;
		}
		case 430:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
		case 208:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			break;
		}
		case 664:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitInfantry) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 797:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeDangerousAnimals) { return(true);}
			if (nTest == cUnitTypeFood) { return(true);}
			if (nTest == cUnitTypeResource) { return(true);}
			if (nTest == cUnitTypeHuntedResource) { return(true);}
			if (nTest == cUnitTypeNature) { return(true);}
			if (nTest == cUnitTypeNatureClass) { return(true);}
			if (nTest == cUnitTypeHuntable) { return(true);}
			if (nTest == cUnitTypeAnimalPredator) { return(true);}
			break;
		}
		case 906:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			break;
		}
	}
	return(false);
}

bool Atlanteanlookup_GetProtoUnitIsType(int nPUID=-1, int nTest=-1, int nCultureStart=-1)
{
	switch (nPUID)
	{
		case 732:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractScout) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 703:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			break;
		}
		case 699:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeSiegeShip) { return(true);}
			break;
		}
		case 714:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 691:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 727:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitArcher) { return(true);}
			break;
		}
		case 701:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 704:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			break;
		}
		case 711:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractBarracks) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			break;
		}
		case 692:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 697:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeTransport) { return(true);}
			if (nTest == cUnitTypeTransportShip) { return(true);}
			break;
		}
		case 734:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 715:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 729:
		{
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 689:
		{
			if (nTest == cUnitTypeLogicalTypeHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeSharedBuilding) { return(true);}
			break;
		}
		case 690:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMeanPredatorsAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeAbstractVillager) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 716:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 726:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 717:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 713:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 737:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			break;
		}
		case 731:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 698:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeHammerShip) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			break;
		}
		case 709:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			break;
		}
		case 712:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractArcher) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 725:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 720:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			break;
		}
		case 722:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitCavalry) { return(true);}
			if (nTest == cUnitTypeMythUnitSiege) { return(true);}
			break;
		}
		case 688:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMeanPredatorsAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeAbstractVillager) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 694:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 696:
		{
			if (nTest == cUnitTypeLogicalTypeNavalMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeShipNotFishinghip) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeArcherShip) { return(true);}
			break;
		}
		case 757:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitArcher) { return(true);}
			break;
		}
		case 695:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidLocustSwarmTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeShip) { return(true);}
			if (nTest == cUnitTypeUtilityShip) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 745:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			break;
		}
		case 719:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 746:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 700:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCavalryAndScout) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractCavalry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 913:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractSiegeWeapon) { return(true);}
			break;
		}
		case 739:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 724:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			break;
		}
		case 702:
		{
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractStable) { return(true);}
			if (nTest == cUnitTypeConvertableBuilding) { return(true);}
			break;
		}
		case 706:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeSiegeAutoAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingNotTitanGate) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidDeconstructionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsThatTrainMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotWalls) { return(true);}
			if (nTest == cUnitTypeLogicalTypeBuildingsNotHouses) { return(true);}
			if (nTest == cUnitTypeLogicalTypeTimeshift) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRamAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeBuilding) { return(true);}
			if (nTest == cUnitTypeBuildingClass) { return(true);}
			if (nTest == cUnitTypeMilitaryBuilding) { return(true);}
			if (nTest == cUnitTypeAbstractFortress) { return(true);}
			if (nTest == cUnitTypeBuildingsThatShoot) { return(true);}
			break;
		}
		case 738:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractScout) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 723:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeFlyingUnit) { return(true);}
			break;
		}
		case 718:
		{
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			break;
		}
		case 693:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
		case 707:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeThrown) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeOdinRegenerates) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeAbstractInfantry) { return(true);}
			if (nTest == cUnitTypeHumanSoldier) { return(true);}
			break;
		}
		case 705:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeEasySelectAvoid) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeAbstractTradeUnit) { return(true);}
			if (nTest == cUnitTypeEconomic) { return(true);}
			break;
		}
		case 740:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidTraitorsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMummyMinionTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypePerseusCanStone) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMythUnitNotTitan) { return(true);}
			if (nTest == cUnitTypeLogicalTypeFavoriteMythUnit) { return(true);}
			if (nTest == cUnitTypeLogicalTypeCanBeStoned) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeMythUnit) { return(true);}
			if (nTest == cUnitTypeMythUnitArcher) { return(true);}
			break;
		}
		case 708:
		{
			if (nTest == cUnitTypeLogicalTypeCanBeHealed) { return(true);}
			if (nTest == cUnitTypeLogicalTypeMilitaryUnitsAndBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeParticipatesInBattlecries) { return(true);}
			if (nTest == cUnitTypeLogicalTypeConvertsHerds) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidBoltTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidSpyTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidShiftingSandsTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeLandMilitary) { return(true);}
			if (nTest == cUnitTypeLogicalTypeUnitsNotBuildings) { return(true);}
			if (nTest == cUnitTypeLogicalTypeHandUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeRangedUnitsAttack) { return(true);}
			if (nTest == cUnitTypeLogicalTypeGarrisonOnBoats) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidForestFireTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeValidMeteorTarget) { return(true);}
			if (nTest == cUnitTypeLogicalTypeNonGreekUnit) { return(true);}
			if (nTest == cUnitTypeUnitClass) { return(true);}
			if (nTest == cUnitTypeMilitary) { return(true);}
			if (nTest == cUnitTypeHero) { return(true);}
			break;
		}
	}
	return(false);
}

bool GetProtoUnitIsType(int nPUID=-1, int nTest=-1, int nCultureStart=-1)
{
	bool retval = false;
	if (nCultureStart==cCultureGreek) { retval = Greeklookup_GetProtoUnitIsType(nPUID, nTest); }
	else if (nCultureStart==cCultureEgyptian) { retval = Egyptianlookup_GetProtoUnitIsType(nPUID, nTest); }
	else if (nCultureStart==cCultureNorse) { retval = Norselookup_GetProtoUnitIsType(nPUID, nTest); }
	else if (nCultureStart==cCultureAtlantean) { retval = Atlanteanlookup_GetProtoUnitIsType(nPUID, nTest); }
	else if (nCultureStart==cCultureChinese) { retval = Chineselookup_GetProtoUnitIsType(nPUID, nTest); }
	if (retval == false && nCultureStart != cCultureGreek) { retval = Greeklookup_GetProtoUnitIsType(nPUID, nTest); }
	if (retval == false && nCultureStart != cCultureEgyptian) { retval = Egyptianlookup_GetProtoUnitIsType(nPUID, nTest); }
	if (retval == false && nCultureStart != cCultureNorse) { retval = Norselookup_GetProtoUnitIsType(nPUID, nTest); }
	if (retval == false && nCultureStart != cCultureAtlantean) { retval = Atlanteanlookup_GetProtoUnitIsType(nPUID, nTest); }
	if (retval == false && nCultureStart != cCultureChinese) { retval = Chineselookup_GetProtoUnitIsType(nPUID, nTest); }
	if (retval == false) { retval = Otherslookup_GetProtoUnitIsType(nPUID, nTest); }
	return(retval);
}
vector Chineselookup_GetProtoUnitArmor(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fHackBasePercent = 0.0;
	float fPierceBasePercent = 0.0;
	float fCrushBasePercent = 0.0;
	switch (nPUID)
	{
		case 826:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 834:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.75*(fCrushBasePercent+1.0)));
			break;
		}
		case 851:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 813:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 837:
		{
			return(xsVectorSet(0.4, 0.4, 0.99));
			break;
		}
		case 824:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 832:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 823:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 847:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 833:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 816:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 852:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 831:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 444:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 830:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 815:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 842:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 848:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 846:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.45*(fHackBasePercent+1.0), 0.45*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 924:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.9*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
		case 878:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 850:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 926:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 825:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 836:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 843:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 827:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 845:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 814:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 819:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 818:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 964)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 829:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.45*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 835:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 849:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 807:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 265)) {fHackBasePercent = fHackBasePercent + 0.3; fPierceBasePercent = fPierceBasePercent + 0.3; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 828:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.9*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
	}
	return(cInvalidVector);
}

vector Egyptianlookup_GetProtoUnitArmor(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fHackBasePercent = 0.0;
	float fPierceBasePercent = 0.0;
	float fCrushBasePercent = 0.0;
	switch (nPUID)
	{
		case 539:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.9*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 446:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 577:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 521:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 520:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 573:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 359:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 519:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 518:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 357:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 313)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 392:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.9*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
		case 424:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 497:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 673:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.0*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 415:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 558:
		{
			return(xsVectorSet(0.4, 0.4, 0.99));
			break;
		}
		case 427:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.0*(fHackBasePercent+1.0), 0.0*(fPierceBasePercent+1.0), 0.0*(fCrushBasePercent+1.0)));
			break;
		}
		case 912:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 592:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.25*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 677:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 380:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.05*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
		case 528:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 499:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 537:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 744:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 439:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 676:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 674:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 513:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 418:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.45*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 473:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 630:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.05*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 617:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 648:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 517:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 511:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.01*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 579:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.55*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 370:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 587:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 361:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 652:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 364:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 356:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.05*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 672:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 355:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 562)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 654)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 385:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 602:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 571:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.75*(fCrushBasePercent+1.0)));
			break;
		}
		case 398:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 447:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 678:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.05*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 425:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.25*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 490:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 265)) {fHackBasePercent = fHackBasePercent + 0.3; fPierceBasePercent = fPierceBasePercent + 0.3; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 498:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 378:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.75*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 675:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 512:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 545:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 593:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.45*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
	}
	return(cInvalidVector);
}

vector Norselookup_GetProtoUnitArmor(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fHackBasePercent = 0.0;
	float fPierceBasePercent = 0.0;
	float fCrushBasePercent = 0.0;
	switch (nPUID)
	{
		case 570:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.75*(fCrushBasePercent+1.0)));
			break;
		}
		case 394:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 576:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 531:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 582:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 749:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 387:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 583:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 474:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 495:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 704)) {fHackBasePercent = fHackBasePercent + 0.2; fPierceBasePercent = fPierceBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 360:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 265)) {fHackBasePercent = fHackBasePercent + 0.3; fPierceBasePercent = fPierceBasePercent + 0.3; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 627:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 930:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 379:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
		case 538:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 448)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 584:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.65*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 395:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 393:
		{
			return(xsVectorSet(0.4, 0.4, 0.99));
			break;
		}
		case 543:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 581:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 750:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 585:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 484:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 265)) {fHackBasePercent = fHackBasePercent + 0.3; fPierceBasePercent = fPierceBasePercent + 0.3; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 399:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 397:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 358:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 613:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.65*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 485:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 491:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.1*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 929:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 488:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.05*(fHackBasePercent+1.0), 0.99*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
		case 580:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 911:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 396:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.7*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 493:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 686:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 572:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 128)) {fHackBasePercent = fHackBasePercent + 0.3; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 604:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 390:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.55*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 931:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 489:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 492:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 125)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.1*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 400:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 481:
		{
			return(xsVectorSet(0.3, 0.4, 0.99));
			break;
		}
		case 589:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
	}
	return(cInvalidVector);
}

vector Greeklookup_GetProtoUnitArmor(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fHackBasePercent = 0.0;
	float fPierceBasePercent = 0.0;
	float fCrushBasePercent = 0.0;
	switch (nPUID)
	{
		case 578:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 557:
		{
			return(xsVectorSet(0.4, 0.4, 0.99));
			break;
		}
		case 542:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 426:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 487:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 265)) {fHackBasePercent = fHackBasePercent + 0.3; fPierceBasePercent = fPierceBasePercent + 0.3; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 507:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 401:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 569)) {fCrushBasePercent = fCrushBasePercent + 0.3; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 506:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.1*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 368:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 500:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 541:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 377:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 575:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 486:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 508:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 625:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 553:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 503:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 364)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 510:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.05*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.5*(fCrushBasePercent+1.0)));
			break;
		}
		case 514:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.45*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 658:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 471:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 496:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.45*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 416:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 445:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 586:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 910:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 472:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 420:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 555:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 423:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 391)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 536:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 628:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 554:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 622:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 504:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.1*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 364:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 369:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 567:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.75*(fCrushBasePercent+1.0)));
			break;
		}
		case 552:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 515:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 594:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 576)) {fPierceBasePercent = fPierceBasePercent + 0.5; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 502:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 501:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 551:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 402:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 417:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 568:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 373:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 550:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 509:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.9*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
		case 505:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.25*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 419:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
	}
	return(cInvalidVector);
}

vector Commonlookup_GetProtoUnitArmor(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fHackBasePercent = 0.0;
	float fPierceBasePercent = 0.0;
	float fCrushBasePercent = 0.0;
	switch (nPUID)
	{
		case 480:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.45*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 391:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 388)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 363:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 438:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 388)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 656:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 388)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 362:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.2*(fCrushBasePercent+1.0)));
			break;
		}
		case 710:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.9*(fHackBasePercent+1.0), 0.95*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
		case 465:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 365:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 366:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 388)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 469:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.85*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 437:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 388)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 464:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 367:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 372:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
	}
	return(cInvalidVector);
}

vector Otherslookup_GetProtoUnitArmor(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fHackBasePercent = 0.0;
	float fPierceBasePercent = 0.0;
	float fCrushBasePercent = 0.0;
	switch (nPUID)
	{
		case 752:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.7*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 612:
		{
			return(xsVectorSet(0.4, 0.4, 0.99));
			break;
		}
		case 620:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 452:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 467:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 812:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 436:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 413:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 374:
		{
			return(xsVectorSet(0.0, 0.1, 0.99));
			break;
		}
		case 564:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 382:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 591:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 927:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 793:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 779:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 525:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.25*(fCrushBasePercent+1.0)));
			break;
		}
		case 882:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 855:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 880:
		{
			return(xsVectorSet(0.0, 0.1, 0.99));
			break;
		}
		case 684:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 730:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 776:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 629:
		{
			return(xsVectorSet(0.4, 0.2, 0.99));
			break;
		}
		case 900:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 905:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 860:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 544:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 375:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 432:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.55*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 889:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.55*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 434:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 901:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 902:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 182:
		{
			return(xsVectorSet(0.0, 0.0, 0.0));
			break;
		}
		case 771:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 408:
		{
			return(xsVectorSet(0.0, 0.1, 0.99));
			break;
		}
		case 459:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 753:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 859:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 460:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 803:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 751:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.8*(fHackBasePercent+1.0), 0.99*(fPierceBasePercent+1.0), 0.6*(fCrushBasePercent+1.0)));
			break;
		}
		case 760:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.55*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.5*(fCrushBasePercent+1.0)));
			break;
		}
		case 574:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 646:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 800:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.75*(fHackBasePercent+1.0), 0.75*(fPierceBasePercent+1.0), 0.75*(fCrushBasePercent+1.0)));
			break;
		}
		case 796:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.9*(fHackBasePercent+1.0), 0.95*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
		case 903:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 614:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 801:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.0*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 650:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 747:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 774:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 788:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.45*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 414:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 728:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 607:
		{
			return(xsVectorSet(0.0, 0.1, 0.99));
			break;
		}
		case 660:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.25*(fPierceBasePercent+1.0), 0.15*(fCrushBasePercent+1.0)));
			break;
		}
		case 206:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.99*(fHackBasePercent+1.0), 0.99*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 907:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 389:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 802:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 125)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.1*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 597:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 605:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.0*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 569:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.25*(fPierceBasePercent+1.0), 0.2*(fCrushBasePercent+1.0)));
			break;
		}
		case 596:
		{
			return(xsVectorSet(0.2, 0.15, 0.99));
			break;
		}
		case 516:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 381:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 456:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 898:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 917:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.99*(fHackBasePercent+1.0), 0.99*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 556:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.99*(fHackBasePercent+1.0), 0.99*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 777:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.8*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 754:
		{
			return(xsVectorSet(0.95, 0.95, 0.95));
			break;
		}
		case 606:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.0*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 661:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 772:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.45*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 928:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 457:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 858:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.85*(fHackBasePercent+1.0), 0.85*(fPierceBasePercent+1.0), 0.85*(fCrushBasePercent+1.0)));
			break;
		}
		case 608:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.85*(fHackBasePercent+1.0), 0.85*(fPierceBasePercent+1.0), 0.85*(fCrushBasePercent+1.0)));
			break;
		}
		case 821:
		{
			return(xsVectorSet(0.0, 0.1, 0.99));
			break;
		}
		case 799:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 463:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 916:
		{
			return(xsVectorSet(0.2, 0.15, 0.99));
			break;
		}
		case 477:
		{
			return(xsVectorSet(0.95, 0.95, 0.95));
			break;
		}
		case 640:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 787:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.95*(fHackBasePercent+1.0), 0.95*(fPierceBasePercent+1.0), 0.95*(fCrushBasePercent+1.0)));
			break;
		}
		case 476:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.95*(fHackBasePercent+1.0), 0.95*(fPierceBasePercent+1.0), 0.95*(fCrushBasePercent+1.0)));
			break;
		}
		case 654:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 665:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 822:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 429:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 405:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.05*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 619:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 636:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.8*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 535:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.9*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 856:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.5*(fCrushBasePercent+1.0)));
			break;
		}
		case 904:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 679:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 773:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 844:
		{
			return(xsVectorSet(0.0, 0.0, 0.0));
			break;
		}
		case 600:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 388)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 193:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 560:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 798:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 881:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 409:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.99*(fHackBasePercent+1.0), 0.99*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 653:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 657:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 683:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 410:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.05*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 795:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.9*(fHackBasePercent+1.0), 0.95*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
		case 411:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 854:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.45*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 422:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 884:
		{
			return(xsVectorSet(0.2, 0.15, 0.99));
			break;
		}
		case 524:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.7*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 624:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.05*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 431:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.65*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.95*(fCrushBasePercent+1.0)));
			break;
		}
		case 853:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 134:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 817:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 590:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.99*(fHackBasePercent+1.0), 0.99*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 785:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 433:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 875:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 435:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 615:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 890:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 386:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 450:
		{
			return(xsVectorSet(0.4, 0.4, 0.99));
			break;
		}
		case 540:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 666:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 668:
		{
			return(xsVectorSet(0.25, 0.35, 0.99));
			break;
		}
		case 404:
		{
			return(xsVectorSet(0.0, 0.1, 0.99));
			break;
		}
		case 529:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.5*(fCrushBasePercent+1.0)));
			break;
		}
		case 761:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(1.0*(fHackBasePercent+1.0), 1.0*(fPierceBasePercent+1.0), 1.0*(fCrushBasePercent+1.0)));
			break;
		}
		case 877:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 458:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 820:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 603:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 443:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.55*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 546:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 388)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 634:
		{
			return(xsVectorSet(0.0, 0.1, 0.99));
			break;
		}
		case 626:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.7*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 595:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 412:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.0*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 530:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 651:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 479:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.0*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 741:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 430:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 208:
		{
			return(xsVectorSet(0.99, 0.99, 0.99));
			break;
		}
		case 664:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.55*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 797:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 567)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 906:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
	}
	return(cInvalidVector);
}

vector Atlanteanlookup_GetProtoUnitArmor(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fHackBasePercent = 0.0;
	float fPierceBasePercent = 0.0;
	float fCrushBasePercent = 0.0;
	switch (nPUID)
	{
		case 732:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.1*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 703:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 824)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.75*(fCrushBasePercent+1.0)));
			break;
		}
		case 699:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.08*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.08*(fCrushBasePercent+1.0)));
			break;
		}
		case 714:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.1*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 691:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.1*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 727:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 701:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.25*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 704:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 824)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.05*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.6*(fCrushBasePercent+1.0)));
			break;
		}
		case 711:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 692:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 697:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 734:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 715:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.1*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 729:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.45*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 689:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 690:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 265)) {fHackBasePercent = fHackBasePercent + 0.3; fPierceBasePercent = fPierceBasePercent + 0.3; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 716:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.05*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 726:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 717:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.05*(fHackBasePercent+1.0), 0.3*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 713:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 737:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.6*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 731:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.25*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 698:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.75*(fCrushBasePercent+1.0)));
			break;
		}
		case 709:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.2*(fHackBasePercent+1.0), 0.8*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 712:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 793)) {fHackBasePercent = fHackBasePercent + 0.1; fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 725:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.5*(fHackBasePercent+1.0), 0.25*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 720:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 722:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.75*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 688:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 265)) {fHackBasePercent = fHackBasePercent + 0.3; fPierceBasePercent = fPierceBasePercent + 0.3; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.35*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 694:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.1*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 696:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.15*(fPierceBasePercent+1.0), 0.1*(fCrushBasePercent+1.0)));
			break;
		}
		case 757:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 695:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; fCrushBasePercent = fCrushBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.6*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 745:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 719:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 746:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 700:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.25*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 913:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 824)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.9*(fPierceBasePercent+1.0), 0.9*(fCrushBasePercent+1.0)));
			break;
		}
		case 739:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.4*(fPierceBasePercent+1.0), 0.85*(fCrushBasePercent+1.0)));
			break;
		}
		case 724:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.85*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 702:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 706:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 104)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 139)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 773)) {fHackBasePercent = fHackBasePercent + 0.15; fCrushBasePercent = fCrushBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 687)) {fCrushBasePercent = fCrushBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.96*(fPierceBasePercent+1.0), 0.05*(fCrushBasePercent+1.0)));
			break;
		}
		case 738:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.15*(fHackBasePercent+1.0), 0.05*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 723:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.1*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 718:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.35*(fHackBasePercent+1.0), 0.2*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 693:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.3*(fHackBasePercent+1.0), 0.7*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 707:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 977)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 365)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.25*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
		case 705:
		{
			return(xsVectorSet(0.4, 0.4, 0.99));
			break;
		}
		case 740:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 691)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 685)) {fCrushBasePercent = fCrushBasePercent + 0.2; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.5*(fPierceBasePercent+1.0), 0.8*(fCrushBasePercent+1.0)));
			break;
		}
		case 708:
		{
			fHackBasePercent=0.0; fCrushBasePercent=0.0; fPierceBasePercent=0.0;
			if (PlayerHasTech(nOwner, 781)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 558)) {fHackBasePercent = fHackBasePercent + 0.05; }
			if (PlayerHasTech(nOwner, 89)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 88)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 434)) {fHackBasePercent = fHackBasePercent + 0.2; fHackBasePercent = fHackBasePercent + 0.2; }
			if (PlayerHasTech(nOwner, 85)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 86)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 87)) {fHackBasePercent = fHackBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 600)) {fHackBasePercent = fHackBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 601)) {fPierceBasePercent = fPierceBasePercent + 0.1; }
			if (PlayerHasTech(nOwner, 90)) {fPierceBasePercent = fPierceBasePercent + 0.15; }
			if (PlayerHasTech(nOwner, 604)) {fPierceBasePercent = fPierceBasePercent + 0.05; }
			return(xsVectorSet(0.4*(fHackBasePercent+1.0), 0.25*(fPierceBasePercent+1.0), 0.99*(fCrushBasePercent+1.0)));
			break;
		}
	}
	return(cInvalidVector);
}

vector GetProtoUnitArmor(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	vector retval = cInvalidVector;
	if (nCultureStart==cCultureGreek) { retval = Greeklookup_GetProtoUnitArmor(nPUID, nOwner); }
	else if (nCultureStart==cCultureEgyptian) { retval = Egyptianlookup_GetProtoUnitArmor(nPUID, nOwner); }
	else if (nCultureStart==cCultureNorse) { retval = Norselookup_GetProtoUnitArmor(nPUID, nOwner); }
	else if (nCultureStart==cCultureAtlantean) { retval = Atlanteanlookup_GetProtoUnitArmor(nPUID, nOwner); }
	else if (nCultureStart==cCultureChinese) { retval = Chineselookup_GetProtoUnitArmor(nPUID, nOwner); }
	if (VectorsIdentical(retval, cInvalidVector) && nCultureStart != cCultureGreek) { retval = Greeklookup_GetProtoUnitArmor(nPUID, nOwner); }
	if (VectorsIdentical(retval, cInvalidVector) && nCultureStart != cCultureEgyptian) { retval = Egyptianlookup_GetProtoUnitArmor(nPUID, nOwner); }
	if (VectorsIdentical(retval, cInvalidVector) && nCultureStart != cCultureNorse) { retval = Norselookup_GetProtoUnitArmor(nPUID, nOwner); }
	if (VectorsIdentical(retval, cInvalidVector) && nCultureStart != cCultureAtlantean) { retval = Atlanteanlookup_GetProtoUnitArmor(nPUID, nOwner); }
	if (VectorsIdentical(retval, cInvalidVector) && nCultureStart != cCultureChinese) { retval = Chineselookup_GetProtoUnitArmor(nPUID, nOwner); }
	if (VectorsIdentical(retval, cInvalidVector)) { retval = Otherslookup_GetProtoUnitArmor(nPUID, nOwner); }
	return(retval);
}
float Chineselookup_GetAttackDamage(int nPUID=-1, int nOwner=-1, int nTargetPUID=-1, int nTargetOwner=-1, int nAttackType=cBestAttack, int nCultureStart=-1)
{
	float fHack = -1;
	float fPierce = -1;
	float fCrush = -1;
	vector vArmor = cInvalidVector;
	switch (nPUID)
	{
		case 826:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fCrush = fCrush * 2.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fCrush = fCrush * 1.5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 2.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fPierce = fPierce * 1.5;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 834:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 851:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 813:
		{
			return(-2.0);
			break;
		}
		case 837:
		{
			return(-2.0);
			break;
		}
		case 824:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractInfantry)) { fHack = fHack * 3.0;}
			if (nTargetPUID == 495) { fHack = fHack * 3;}
			if (nTargetPUID == 583) { fHack = fHack * 3;}
			if (nTargetPUID == 715) { fHack = fHack * 3;}
			if (nTargetPUID == 708) { fHack = fHack * 3;}
			if (nTargetPUID == 693) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 832:
		{
			return(-2.0);
			break;
		}
		case 823:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractCavalry)) { fPierce = fPierce * 2.0;}
			if (nTargetPUID == 701) { fPierce = fPierce * 2.0;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 847:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 833:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeTransportShip)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 816:
		{
			return(-2.0);
			break;
		}
		case 852:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 25.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 30.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 831:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 4;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 444:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 2.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 830:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 815:
		{
			return(-2.0);
			break;
		}
		case 842:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 848:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 25.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 846:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 924:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 50.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fCrush = fCrush * 2.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 4;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 2.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fPierce = fPierce * 4;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 878:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 30.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 850:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.25;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.25;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 926:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fCrush = fCrush * 2.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fCrush = fCrush * 1.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 4;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 2.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fPierce = fPierce * 1.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fPierce = fPierce * 4;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 825:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 836:
		{
			return(-2.0);
			break;
		}
		case 843:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 11.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 827:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				nAttackType = cRangedAttack; // immobile
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 17.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 6;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fPierce = 14.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			break;
		}
		case 845:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 13.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 814:
		{
			return(-2.0);
			break;
		}
		case 819:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 4.0;
			if (nTargetPUID == 358) { fPierce = fPierce * 0.9;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 818:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractCavalry)) { fHack = fHack * 1.3;}
			if (nTargetPUID == 701) { fHack = fHack * 1.3;}
			if (nTargetPUID == 716) { fHack = fHack * 1.50;}
			if (nTargetPUID == 717) { fHack = fHack * 1.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 829:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 835:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 0.5;}
			if (nTargetPUID == 366) { fCrush = fCrush * 3.2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			return(fCrush);
			break;
		}
		case 849:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 807:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 6.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 8.0;
			if (nTargetPUID == 469) { fHack = fHack * 2.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 2;}
			if (nTargetPUID == 718) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 828:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 50.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fCrush = fCrush * 2.5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 2.5;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
	}
	return(-1.0);
}

float Egyptianlookup_GetAttackDamage(int nPUID=-1, int nOwner=-1, int nTargetPUID=-1, int nTargetOwner=-1, int nAttackType=cBestAttack, int nCultureStart=-1)
{
	float fHack = -1;
	float fPierce = -1;
	float fCrush = -1;
	vector vArmor = cInvalidVector;
	switch (nPUID)
	{
		case 539:
		{
			return(-2.0);
			break;
		}
		case 446:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 25.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 577:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractVillager)) { fHack = fHack * 0.1;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 521:
		{
			return(-2.0);
			break;
		}
		case 520:
		{
			return(-2.0);
			break;
		}
		case 573:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 0.75;}
			if (nTargetPUID == 366) { fCrush = fCrush * 3.2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			return(fCrush);
			break;
		}
		case 359:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractCavalry)) { fHack = fHack * 1.75;}
			if (nTargetPUID == 701) { fHack = fHack * 1.75;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 519:
		{
			return(-2.0);
			break;
		}
		case 518:
		{
			return(-2.0);
			break;
		}
		case 357:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 3.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fPierce = fPierce * 4;}
			if (nTargetPUID == 491) { fPierce = fPierce * 3.0;}
			if (nTargetPUID == 504) { fPierce = fPierce * 1.25;}
			if (nTargetPUID == 356) { fPierce = fPierce * 1.25;}
			if (nTargetPUID == 713) { fPierce = fPierce * 4;}
			if (nTargetPUID == 717) { fPierce = fPierce * 4;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 392:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 50.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fCrush = fCrush * 2.5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 2.5;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 424:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fPierce = fPierce * 0.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 497:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 5.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 673:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 4.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 415:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 40.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.25;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 40.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.25;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 558:
		{
			return(-2.0);
			break;
		}
		case 427:
		{
			return(-2.0);
			break;
		}
		case 912:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractVillager)) { fHack = fHack * 1.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 592:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 16.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fPierce = fPierce * 0.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 677:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 380:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 3.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fCrush = 50.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			return(fCrush);
			}
			break;
		}
		case 528:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 499:
		{
			return(-2.0);
			break;
		}
		case 537:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeTransportShip)) { fPierce = fPierce * 3;}
			if (nTargetPUID == 695) { fPierce = fPierce * 1.5;}
			if (nTargetPUID == 544) { fPierce = fPierce * 1.5;}
			if (nTargetPUID == 402) { fPierce = fPierce * 1.5;}
			if (nTargetPUID == 543) { fPierce = fPierce * 1.5;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 744:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 40.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 40.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 439:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 25.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 676:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 674:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 513:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 8.5;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 418:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 11.25;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 473:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 28.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 630:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 617:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 14.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 3.0;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 648:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 5.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 517:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 511:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 3.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 9;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 579:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 15.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 370:
		{
			return(-2.0);
			break;
		}
		case 587:
		{
			return(-2.0);
			break;
		}
		case 361:
		{
			return(-2.0);
			break;
		}
		case 652:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeTransport)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 364:
		{
			return(-2.0);
			break;
		}
		case 356:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractInfantry)) { fHack = fHack * 4;}
			if (nTargetPUID == 495) { fHack = fHack * 4;}
			if (nTargetPUID == 583) { fHack = fHack * 4;}
			if (nTargetPUID == 694) { fHack = fHack * 4;}
			if (nTargetPUID == 715) { fHack = fHack * 4;}
			if (nTargetPUID == 708) { fHack = fHack * 4;}
			if (nTargetPUID == 693) { fHack = fHack * 4;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 672:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 355:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractCavalry)) { fHack = fHack * 1.1;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 2;}
			if (nTargetPUID == 701) { fHack = fHack * 1.1;}
			if (nTargetPUID == 716) { fHack = fHack * 1.25;}
			if (nTargetPUID == 717) { fHack = fHack * 1.25;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 385:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 13.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 602:
		{
			return(-2.0);
			break;
		}
		case 571:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 398:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 25.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 447:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.5;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 678:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 425:
		{
			return(-2.0);
			break;
		}
		case 490:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 6.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 8.0;
			if (nTargetPUID == 469) { fHack = fHack * 2.5;}
			if (nTargetPUID == 718) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 498:
		{
			return(-2.0);
			break;
		}
		case 378:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 5.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 5.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 675:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 14.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 512:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				nAttackType = cRangedAttack; // immobile
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 6;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fPierce = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			break;
		}
		case 545:
		{
			return(-2.0);
			break;
		}
		case 593:
		{
			return(-2.0);
			break;
		}
	}
	return(-1.0);
}

float Norselookup_GetAttackDamage(int nPUID=-1, int nOwner=-1, int nTargetPUID=-1, int nTargetOwner=-1, int nAttackType=cBestAttack, int nCultureStart=-1)
{
	float fHack = -1;
	float fPierce = -1;
	float fCrush = -1;
	vector vArmor = cInvalidVector;
	switch (nPUID)
	{
		case 570:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 394:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fPierce = fPierce * 0.25;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 576:
		{
			return(-2.0);
			break;
		}
		case 531:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 4.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 582:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 749:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 387:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 583:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 11.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 4.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 474:
		{
			return(-2.0);
			break;
		}
		case 495:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 6.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 360:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 6.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 8.0;
			if (nTargetPUID == 469) { fHack = fHack * 2.5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 627:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 40.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fPierce = fPierce * 0.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 930:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 379:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 4.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fCrush = fCrush * 3.0;}
			if (nTargetPUID == 366) { fCrush = fCrush * 4;}
			if (nTargetPUID == 469) { fCrush = fCrush * 1.75;}
			if (nTargetPUID == 724) { fCrush = fCrush * 1.75;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 3.0;}
			if (nTargetPUID == 366) { fPierce = fPierce * 4;}
			if (nTargetPUID == 469) { fPierce = fPierce * 1.75;}
			if (nTargetPUID == 724) { fPierce = fPierce * 1.75;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 538:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeTransportShip)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 584:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 40.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.10;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 40.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.10;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 395:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 25.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 393:
		{
			return(-2.0);
			break;
		}
		case 543:
		{
			return(-2.0);
			break;
		}
		case 581:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 750:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 585:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 14.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 484:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 6.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 8.0;
			if (nTargetPUID == 469) { fHack = fHack * 2.5;}
			if (nTargetPUID == 718) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 399:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 397:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 3;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 358:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (nTargetPUID == 491) { fHack = fHack * 1.75;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fHack = fHack * 1.25;}
			if (nTargetPUID == 713) { fHack = fHack * 1.25;}
			if (nTargetPUID == 717) { fHack = fHack * 1.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 613:
		{
			return(-2.0);
			break;
		}
		case 485:
		{
			return(-2.0);
			break;
		}
		case 491:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 4.5;
			if (nTargetPUID == 356) { fHack = fHack * 2.25;}
			if (nTargetPUID == 503) { fHack = fHack * 2.75;}
			if (nTargetPUID == 818) { fHack = fHack * 2.75;}
			if (nTargetPUID == 355) { fHack = fHack * 2.25;}
			if (nTargetPUID == 491) { fHack = fHack * 2.25;}
			if (nTargetPUID == 624) { fHack = fHack * 2.25;}
			if (nTargetPUID == 628) { fHack = fHack * 2.25;}
			if (nTargetPUID == 492) { fHack = fHack * 2.25;}
			if (nTargetPUID == 493) { fHack = fHack * 2.25;}
			if (nTargetPUID == 504) { fHack = fHack * 2.25;}
			if (nTargetPUID == 517) { fHack = fHack * 2.25;}
			if (nTargetPUID == 495) { fHack = fHack * 2.0;}
			if (nTargetPUID == 583) { fHack = fHack * 2.0;}
			if (nTargetPUID == 514) { fHack = fHack * 2.75;}
			if (nTargetPUID == 691) { fHack = fHack * 2.25;}
			if (nTargetPUID == 694) { fHack = fHack * 2.25;}
			if (nTargetPUID == 692) { fHack = fHack * 2.25;}
			if (nTargetPUID == 693) { fHack = fHack * 2.25;}
			if (nTargetPUID == 707) { fHack = fHack * 2.25;}
			if (nTargetPUID == 708) { fHack = fHack * 2.25;}
			if (nTargetPUID == 714) { fHack = fHack * 2.25;}
			if (nTargetPUID == 715) { fHack = fHack * 2.25;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 929:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 488:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 40.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			return(fCrush);
			break;
		}
		case 580:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 911:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 3.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 396:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 493:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fHack = fHack * 2;}
			if (nTargetPUID == 703) { fHack = fHack * .75;}
			if (nTargetPUID == 717) { fHack = fHack * 2;}
			if (nTargetPUID == 713) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 686:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 572:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 0.5;}
			if (nTargetPUID == 366) { fCrush = fCrush * 3.2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			return(fCrush);
			break;
		}
		case 604:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 390:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 18.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 931:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 489:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				nAttackType = cRangedAttack; // immobile
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 6;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fPierce = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			break;
		}
		case 492:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (nTargetPUID == 535) { fHack = fHack * 3;}
			if (nTargetPUID == 716) { fHack = fHack * 1.50;}
			if (nTargetPUID == 717) { fHack = fHack * 1.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 400:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 481:
		{
			return(-2.0);
			break;
		}
		case 589:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.25;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
	}
	return(-1.0);
}

float Greeklookup_GetAttackDamage(int nPUID=-1, int nOwner=-1, int nTargetPUID=-1, int nTargetOwner=-1, int nAttackType=cBestAttack, int nCultureStart=-1)
{
	float fHack = -1;
	float fPierce = -1;
	float fCrush = -1;
	vector vArmor = cInvalidVector;
	switch (nPUID)
	{
		case 578:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 11.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 557:
		{
			return(-2.0);
			break;
		}
		case 542:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 426:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 12.5;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fPierce = fPierce * 0.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 2;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 487:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 6.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 8.0;
			if (nTargetPUID == 469) { fHack = fHack * 2.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 2;}
			if (nTargetPUID == 718) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 507:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 3.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fPierce = fPierce * 4;}
			if (nTargetPUID == 491) { fPierce = fPierce * 2.0;}
			if (nTargetPUID == 713) { fPierce = fPierce * 4;}
			if (nTargetPUID == 717) { fPierce = fPierce * 4;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 401:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeTransportShip)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 506:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractCavalry)) { fHack = fHack * 3.0;}
			if (nTargetPUID == 701) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 2.5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 368:
		{
			return(-2.0);
			break;
		}
		case 500:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 541:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 377:
		{
			return(-2.0);
			break;
		}
		case 575:
		{
			return(-2.0);
			break;
		}
		case 486:
		{
			return(-2.0);
			break;
		}
		case 508:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 6.5;
			if (nTargetPUID == 358) { fPierce = fPierce * 0.9;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 625:
		{
			return(-2.0);
			break;
		}
		case 553:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 503:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (nTargetPUID == 716) { fHack = fHack * 1.50;}
			if (nTargetPUID == 717) { fHack = fHack * 1.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 510:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 17.0;
			if (nTargetPUID == 366) { fCrush = fCrush * 3;}
			if (nTargetPUID == 469) { fCrush = fCrush * 1.5;}
			if (nTargetPUID == 724) { fCrush = fCrush * 1.5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 5.0;
			if (nTargetPUID == 366) { fPierce = fPierce * 3;}
			if (nTargetPUID == 469) { fPierce = fPierce * 1.5;}
			if (nTargetPUID == 724) { fPierce = fPierce * 1.5;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 514:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeLogicalTypeNonGreekUnit)) { fHack = fHack * 1.5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 658:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 6.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 8.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 471:
		{
			return(-2.0);
			break;
		}
		case 496:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 416:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 11.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fPierce = fPierce * 0.25;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 445:
		{
			return(-2.0);
			break;
		}
		case 586:
		{
			return(-2.0);
			break;
		}
		case 910:
		{
			return(-2.0);
			break;
		}
		case 472:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 420:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 555:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 10.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 423:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 50.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 536:
		{
			return(-2.0);
			break;
		}
		case 628:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 7.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 554:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 622:
		{
			return(-2.0);
			break;
		}
		case 504:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractInfantry)) { fHack = fHack * 3.75;}
			if (nTargetPUID == 495) { fHack = fHack * 3.75;}
			if (nTargetPUID == 583) { fHack = fHack * 3.75;}
			if (nTargetPUID == 715) { fHack = fHack * 3.75;}
			if (nTargetPUID == 693) { fHack = fHack * 3.75;}
			if (nTargetPUID == 708) { fHack = fHack * 3.75;}
			if (nTargetPUID == 694) { fHack = fHack * 3.75;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 364:
		{
			return(-2.0);
			break;
		}
		case 369:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				nAttackType = cRangedAttack; // immobile
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 17.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 6;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fPierce = 14.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			break;
		}
		case 567:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 552:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 515:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 3.5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 594:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 502:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fCrush = fCrush * 3;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 501:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 551:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 402:
		{
			return(-2.0);
			break;
		}
		case 417:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 568:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 0.5;}
			if (nTargetPUID == 366) { fCrush = fCrush * 3.2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			return(fCrush);
			break;
		}
		case 373:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 550:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 509:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 11.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fCrush = fCrush * 2.5;}
			if (nTargetPUID == 366) { fCrush = fCrush * 3;}
			if (nTargetPUID == 469) { fCrush = fCrush * 1.5;}
			if (nTargetPUID == 724) { fCrush = fCrush * 1.5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 2.5;}
			if (nTargetPUID == 366) { fPierce = fPierce * 3;}
			if (nTargetPUID == 469) { fPierce = fPierce * 1.5;}
			if (nTargetPUID == 724) { fPierce = fPierce * 1.5;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 505:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fHack = fHack * 1.25;}
			if (nTargetPUID == 713) { fHack = fHack * 1.25;}
			if (nTargetPUID == 717) { fHack = fHack * 1.25;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 419:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
	}
	return(-1.0);
}

float Commonlookup_GetAttackDamage(int nPUID=-1, int nOwner=-1, int nTargetPUID=-1, int nTargetOwner=-1, int nAttackType=cBestAttack, int nCultureStart=-1)
{
	float fHack = -1;
	float fPierce = -1;
	float fCrush = -1;
	vector vArmor = cInvalidVector;
	switch (nPUID)
	{
		case 480:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 12.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 391:
		{
			return(-2.0);
			break;
		}
		case 363:
		{
			return(-2.0);
			break;
		}
		case 438:
		{
			return(-2.0);
			break;
		}
		case 656:
		{
			return(-2.0);
			break;
		}
		case 362:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 8.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 710:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 70.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (nTargetPUID == 710) { fCrush = fCrush * 20;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 70.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (nTargetPUID == 710) { fHack = fHack * 20;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 465:
		{
			return(-2.0);
			break;
		}
		case 365:
		{
			return(-2.0);
			break;
		}
		case 366:
		{
			return(-2.0);
			break;
		}
		case 469:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				nAttackType = cRangedAttack; // immobile
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 6;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeFlyingUnit)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fPierce = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			break;
		}
		case 437:
		{
			return(-2.0);
			break;
		}
		case 464:
		{
			return(-2.0);
			break;
		}
		case 367:
		{
			return(-2.0);
			break;
		}
		case 372:
		{
			return(-2.0);
			break;
		}
	}
	return(-1.0);
}

float Otherslookup_GetAttackDamage(int nPUID=-1, int nOwner=-1, int nTargetPUID=-1, int nTargetOwner=-1, int nAttackType=cBestAttack, int nCultureStart=-1)
{
	float fHack = -1;
	float fPierce = -1;
	float fCrush = -1;
	vector vArmor = cInvalidVector;
	switch (nPUID)
	{
		case 752:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 6;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 612:
		{
			return(-2.0);
			break;
		}
		case 620:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 6.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 6;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 452:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 467:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 812:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 436:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 6;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 413:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 374:
		{
			return(-2.0);
			break;
		}
		case 564:
		{
			return(-2.0);
			break;
		}
		case 382:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 591:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 927:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 793:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 779:
		{
			return(-2.0);
			break;
		}
		case 525:
		{
			return(-2.0);
			break;
		}
		case 882:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 855:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (nTargetPUID == 716) { fHack = fHack * 1.50;}
			if (nTargetPUID == 717) { fHack = fHack * 1.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 880:
		{
			return(-2.0);
			break;
		}
		case 684:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 2.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 730:
		{
			return(-2.0);
			break;
		}
		case 776:
		{
			return(-2.0);
			break;
		}
		case 629:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 900:
		{
			return(-2.0);
			break;
		}
		case 905:
		{
			return(-2.0);
			break;
		}
		case 860:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 544:
		{
			return(-2.0);
			break;
		}
		case 375:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 432:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 6;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 889:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 6;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 434:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 901:
		{
			return(-2.0);
			break;
		}
		case 902:
		{
			return(-2.0);
			break;
		}
		case 182:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 18.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2.0;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 771:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 408:
		{
			return(-2.0);
			break;
		}
		case 459:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 4.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 753:
		{
			return(-2.0);
			break;
		}
		case 859:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 460:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 803:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 751:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 175.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fCrush = fCrush * 2;}
			if (nTargetPUID == 710) { fCrush = fCrush * 20;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 85.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 2;}
			if (nTargetPUID == 710) { fHack = fHack * 20;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 760:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fCrush = fCrush * 3;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 18.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 574:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 100.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 20;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 100.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 20;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			fHack = 100.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 20;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fPierce + fHack);
			break;
		}
		case 646:
		{
			return(-2.0);
			break;
		}
		case 800:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 100.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeUnit)) { fCrush = fCrush * 5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeUnit)) { fHack = fHack * 5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 796:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 150.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fCrush = fCrush * 2;}
			if (nTargetPUID == 795) { fCrush = fCrush * 100;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 150.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 2;}
			if (nTargetPUID == 795) { fHack = fHack * 100;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 903:
		{
			return(-2.0);
			break;
		}
		case 614:
		{
			return(-2.0);
			break;
		}
		case 801:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 4.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 650:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 7.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 747:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 25.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 774:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 6;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 788:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 11.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 414:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fPierce = fPierce * 0.25;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 728:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 11.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fPierce = fPierce * 0.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 607:
		{
			return(-2.0);
			break;
		}
		case 660:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeTransportShip)) { fPierce = fPierce * 4;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 206:
		{
			return(-2.0);
			break;
		}
		case 907:
		{
			return(-2.0);
			break;
		}
		case 389:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 802:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (nTargetPUID == 535) { fHack = fHack * 3;}
			if (nTargetPUID == 716) { fHack = fHack * 1.50;}
			if (nTargetPUID == 717) { fHack = fHack * 1.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 597:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 6.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 605:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 569:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fPierce = fPierce * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeTransportShip)) { fPierce = fPierce * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 5.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 596:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 516:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractInfantry)) { fHack = fHack * 2.0;}
			if (nTargetPUID == 503) { fHack = fHack * 1.5;}
			if (nTargetPUID == 504) { fHack = fHack * 1.5;}
			if (nTargetPUID == 495) { fHack = fHack * 2;}
			if (nTargetPUID == 583) { fHack = fHack * 2;}
			if (nTargetPUID == 715) { fHack = fHack * 2;}
			if (nTargetPUID == 708) { fHack = fHack * 2;}
			if (nTargetPUID == 693) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 381:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 14.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 456:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 898:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.05;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 30.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.05;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 917:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 120.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 556:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHuntable)) { fHack = fHack * 20;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 777:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 100.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 10;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 7;}
			if (nTargetPUID == 608) { fHack = fHack * 25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 754:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 2000.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 500.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 606:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 661:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractVillager)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 6;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 772:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 25.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 928:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 457:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 858:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 300.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fCrush = fCrush * 3;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 100.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 608:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 300.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fCrush = fCrush * 3;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 100.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 821:
		{
			return(-2.0);
			break;
		}
		case 799:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 463:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 27.5;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 916:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 477:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 2000.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 500.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 640:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 150.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			return(fCrush);
			break;
		}
		case 787:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 2000.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fCrush = fCrush * 3;}
			if (nTargetPUID == 710) { fCrush = fCrush * 2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 700.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 3;}
			if (nTargetPUID == 710) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 476:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 2000.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fCrush = fCrush * 3;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 700.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 654:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				nAttackType = cRangedAttack; // immobile
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 12.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fPierce = 7.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			break;
		}
		case 665:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 822:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 429:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 405:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 619:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 6.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 636:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 100.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 10;}
			if (nTargetPUID == 608) { fHack = fHack * 25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 535:
		{
			return(-2.0);
			break;
		}
		case 856:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 12.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 904:
		{
			return(-2.0);
			break;
		}
		case 679:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.05;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 30.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.05;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 773:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 844:
		{
			return(-2.0);
			break;
		}
		case 600:
		{
			return(-2.0);
			break;
		}
		case 193:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 560:
		{
			return(-2.0);
			break;
		}
		case 798:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 100.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 50;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fPierce + fHack);
			break;
		}
		case 881:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 409:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 120.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 653:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 6.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 657:
		{
			return(-2.0);
			break;
		}
		case 683:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 19.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractVillager)) { fHack = fHack * 10;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 410:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 795:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 70.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fCrush = fCrush * 5;}
			if (nTargetPUID == 710) { fCrush = fCrush * 20;}
			if (nTargetPUID == 796) { fCrush = fCrush * 5;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 50.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 5;}
			if (nTargetPUID == 710) { fHack = fHack * 20;}
			if (nTargetPUID == 796) { fHack = fHack * 5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 411:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 854:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 11.25;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 422:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 884:
		{
			return(-2.0);
			break;
		}
		case 524:
		{
			return(-2.0);
			break;
		}
		case 624:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 6.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 431:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 853:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 134:
		{
			return(-2.0);
			break;
		}
		case 817:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 7.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractVillager)) { fHack = fHack * 1.3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 590:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 40.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 785:
		{
			return(-2.0);
			break;
		}
		case 433:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 875:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 435:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 7.5;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 615:
		{
			return(-2.0);
			break;
		}
		case 890:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 386:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 450:
		{
			return(-2.0);
			break;
		}
		case 540:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 6;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractVillager)) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 666:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 30.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 668:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 404:
		{
			return(-2.0);
			break;
		}
		case 529:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 12.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 761:
		{
			return(-2.0);
			break;
		}
		case 877:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 458:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 820:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 14.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 603:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 443:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 546:
		{
			return(-2.0);
			break;
		}
		case 634:
		{
			return(-2.0);
			break;
		}
		case 626:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 595:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 6;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 412:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 4.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 530:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 250.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			return(fCrush);
			break;
		}
		case 651:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 479:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 4.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 741:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 430:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 9.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 208:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 400.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 75.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 664:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 13.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 797:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 906:
		{
			return(-2.0);
			break;
		}
	}
	return(-1.0);
}

float Atlanteanlookup_GetAttackDamage(int nPUID=-1, int nOwner=-1, int nTargetPUID=-1, int nTargetOwner=-1, int nAttackType=cBestAttack, int nCultureStart=-1)
{
	float fHack = -1;
	float fPierce = -1;
	float fCrush = -1;
	vector vArmor = cInvalidVector;
	switch (nPUID)
	{
		case 732:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 703:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 4.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractInfantry)) { fPierce = fPierce * 2.5;}
			if (nTargetPUID == 495) { fPierce = fPierce * 1.5;}
			if (nTargetPUID == 583) { fPierce = fPierce * 1.5;}
			if (nTargetPUID == 493) { fPierce = fPierce * 4.5;}
			if (nTargetPUID == 692) { fPierce = fPierce * 4;}
			if (nTargetPUID == 693) { fPierce = fPierce * 5;}
			if (nTargetPUID == 694) { fPierce = fPierce * 2.5;}
			if (nTargetPUID == 715) { fPierce = fPierce * 2.5;}
			if (nTargetPUID == 708) { fPierce = fPierce * 2.5;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 699:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 0.5;}
			if (nTargetPUID == 366) { fCrush = fCrush * 3.2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			return(fCrush);
			break;
		}
		case 714:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractCavalry)) { fHack = fHack * 3;}
			if (nTargetPUID == 701) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 2.5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 691:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (nTargetPUID == 716) { fHack = fHack * 1.50;}
			if (nTargetPUID == 717) { fHack = fHack * 1.50;}
			if (nTargetPUID == 535) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 727:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fPierce = fPierce * 0.25;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 701:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fHack = fHack * 1.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 4.5;}
			if (nTargetPUID == 713) { fHack = fHack * 1.25;}
			if (nTargetPUID == 717) { fHack = fHack * 1.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 704:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 55.0;
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			return(fCrush);
			break;
		}
		case 711:
		{
			return(-2.0);
			break;
		}
		case 692:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 697:
		{
			return(-2.0);
			break;
		}
		case 734:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 30.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 25.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 715:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 7;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractCavalry)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 2;}
			if (nTargetPUID == 701) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 729:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 11.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 689:
		{
			return(-2.0);
			break;
		}
		case 690:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 13.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 8.0;
			if (nTargetPUID == 469) { fHack = fHack * 3.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 4;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 5;}
			if (nTargetPUID == 718) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 716:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 4.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fPierce = fPierce * 4;}
			if (nTargetPUID == 491) { fPierce = fPierce * 2;}
			if (nTargetPUID == 717) { fPierce = fPierce * 4;}
			if (nTargetPUID == 713) { fPierce = fPierce * 4;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 726:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 4.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 3;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 717:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 4.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fPierce = fPierce * 4;}
			if (nTargetPUID == 491) { fPierce = fPierce * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 7;}
			if (nTargetPUID == 717) { fPierce = fPierce * 4;}
			if (nTargetPUID == 713) { fPierce = fPierce * 4;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 5;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 713:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 6.0;
			if (nTargetPUID == 358) { fPierce = fPierce * 0.9;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 6;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fPierce = fPierce * 5;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 737:
		{
			return(-2.0);
			break;
		}
		case 731:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 2.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 1.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 1.5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 698:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 709:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 5.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 712:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 6.0;
			if (nTargetPUID == 358) { fPierce = fPierce * 0.9;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 725:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 3.0;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3.0;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 720:
		{
			return(-2.0);
			break;
		}
		case 722:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fCrush = fCrush * 5.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 6.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 5.0;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 688:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				if (GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cRangedAttack) > GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, cHandAttack)) { nAttackType = cRangedAttack; }
				else { nAttackType = cHandAttack; }
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 12.0;
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fHack = 8.0;
			if (nTargetPUID == 469) { fHack = fHack * 3.0;}
			if (nTargetPUID == 718) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractSiegeWeapon)) { fHack = fHack * 4;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			}
			break;
		}
		case 694:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 8.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 4.5;}
			if (nTargetPUID == 535) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 5;}
			if (nTargetPUID == 716) { fHack = fHack * 1.50;}
			if (nTargetPUID == 717) { fHack = fHack * 1.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 696:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeTransportShip)) { fPierce = fPierce * 2.5;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 757:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 3;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 695:
		{
			return(-2.0);
			break;
		}
		case 745:
		{
			return(-2.0);
			break;
		}
		case 719:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractVillager)) { fCrush = fCrush * 0.75;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractVillager)) { fHack = fHack * 0.75;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 746:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 15.0;
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 700:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractArcher)) { fHack = fHack * 1.25;}
			if (nTargetPUID == 717) { fHack = fHack * 1.25;}
			if (nTargetPUID == 713) { fHack = fHack * 1.25;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 913:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fCrush = fCrush * 2.5;}
			if (nTargetPUID == 366) { fCrush = fCrush * 2;}
			if (nTargetPUID == 469) { fCrush = fCrush * 1.25;}
			if (nTargetPUID == 724) { fCrush = fCrush * 1.25;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 2.5;}
			if (nTargetPUID == 366) { fPierce = fPierce * 2;}
			if (nTargetPUID == 469) { fPierce = fPierce * 1.25;}
			if (nTargetPUID == 724) { fPierce = fPierce * 1.25;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 739:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 20.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fCrush = fCrush * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHumanSoldier)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 724:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fPierce = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			break;
		}
		case 702:
		{
			return(-2.0);
			break;
		}
		case 706:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			 if (nAttackType == cBestAttack)
			{
				nAttackType = cRangedAttack; // immobile
			}
			if (nAttackType == cRangedAttack) {
			fPierce = 14.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 6;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			if (nAttackType == cHandAttack) {
			fPierce = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeShip)) { fPierce = fPierce * 3;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fPierce);
			}
			break;
		}
		case 738:
		{
			return(-2.0);
			break;
		}
		case 723:
		{
			return(-2.0);
			break;
		}
		case 718:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractVillager)) { fCrush = fCrush * 0.50;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fHack = 15.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fHack = fHack * 0.50;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractVillager)) { fHack = fHack * 0.50;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fCrush + fHack);
			break;
		}
		case 693:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 5.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeBuilding)) { fHack = fHack * 5;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 8;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 707:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractInfantry)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractCavalry)) { fHack = fHack * 2;}
			if (nTargetPUID == 495) { fHack = fHack * 2;}
			if (nTargetPUID == 583) { fHack = fHack * 2;}
			if (nTargetPUID == 694) { fHack = fHack * 2;}
			if (nTargetPUID == 715) { fHack = fHack * 2;}
			if (nTargetPUID == 693) { fHack = fHack * 2;}
			if (nTargetPUID == 708) { fHack = fHack * 2;}
			if (nTargetPUID == 701) { fHack = fHack * 2;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
		case 705:
		{
			return(-2.0);
			break;
		}
		case 740:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fCrush = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fCrush = fCrush * 0.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fCrush = fCrush * 2;}
			fCrush = fCrush * (1.00 - xsVectorGetZ(vArmor));
			fPierce = 12.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeHero)) { fPierce = fPierce * 0.25;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fPierce = fPierce * 2;}
			fPierce = fPierce * (1.00 - xsVectorGetY(vArmor));
			return(fCrush + fPierce);
			break;
		}
		case 708:
		{
			vArmor = GetProtoUnitArmor(nTargetPUID);
			fHack = 10.0;
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractInfantry)) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeMythUnit)) { fHack = fHack * 5.5;}
			if (nTargetPUID == 495) { fHack = fHack * 2;}
			if (nTargetPUID == 583) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeAbstractCavalry)) { fHack = fHack * 2;}
			if (nTargetPUID == 715) { fHack = fHack * 2;}
			if (nTargetPUID == 701) { fHack = fHack * 2;}
			if (nTargetPUID == 693) { fHack = fHack * 2;}
			if (nTargetPUID == 708) { fHack = fHack * 2;}
			if (nTargetPUID == 694) { fHack = fHack * 2;}
			if (GetProtoUnitIsType(nTargetPUID, cUnitTypeSetAnimal)) { fHack = fHack * 5;}
			fHack = fHack * (1.00 - xsVectorGetX(vArmor));
			return(fHack);
			break;
		}
	}
	return(-1.0);
}

float GetAttackDamage(int nPUID=-1, int nOwner=-1, int nTargetPUID=-1, int nTargetOwner=-1, int nAttackType=cBestAttack, int nCultureStart=-1)
{
	float retval = -1.0;
	if (nCultureStart==cCultureGreek) { retval = Greeklookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	else if (nCultureStart==cCultureEgyptian) { retval = Egyptianlookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	else if (nCultureStart==cCultureNorse) { retval = Norselookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	else if (nCultureStart==cCultureAtlantean) { retval = Atlanteanlookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	else if (nCultureStart==cCultureChinese) { retval = Chineselookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	if (retval == -1.0 && nCultureStart != cCultureGreek) { retval = Greeklookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	if (retval == -1.0 && nCultureStart != cCultureEgyptian) { retval = Egyptianlookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	if (retval == -1.0 && nCultureStart != cCultureNorse) { retval = Norselookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	if (retval == -1.0 && nCultureStart != cCultureAtlantean) { retval = Atlanteanlookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	if (retval == -1.0 && nCultureStart != cCultureChinese) { retval = Chineselookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	if (retval == -1.0) { retval = Otherslookup_GetAttackDamage(nPUID, nOwner, nTargetPUID, nTargetOwner, nAttackType); }
	return(retval);
}
int GetFoodContent(int nPUID=-1)
{
	if (nPUID == 363) { return(1000); }
	else if (nPUID == 374) { return(50); }
	else if (nPUID == 375) { return(100); }
	else if (nPUID == 381) { return(200); }
	else if (nPUID == 382) { return(400); }
	else if (nPUID == 386) { return(200); }
	else if (nPUID == 389) { return(300); }
	else if (nPUID == 404) { return(75); }
	else if (nPUID == 405) { return(300); }
	else if (nPUID == 408) { return(50); }
	else if (nPUID == 410) { return(200); }
	else if (nPUID == 411) { return(400); }
	else if (nPUID == 412) { return(150); }
	else if (nPUID == 413) { return(100); }
	else if (nPUID == 421) { return(75); }
	else if (nPUID == 422) { return(100); }
	else if (nPUID == 448) { return(1000); }
	else if (nPUID == 456) { return(100); }
	else if (nPUID == 457) { return(500); }
	else if (nPUID == 458) { return(100); }
	else if (nPUID == 459) { return(100); }
	else if (nPUID == 460) { return(400); }
	else if (nPUID == 461) { return(1000); }
	else if (nPUID == 462) { return(1000); }
	else if (nPUID == 463) { return(9000); }
	else if (nPUID == 467) { return(750); }
	else if (nPUID == 479) { return(150); }
	else if (nPUID == 526) { return(100); }
	else if (nPUID == 591) { return(400); }
	else if (nPUID == 603) { return(200); }
	else if (nPUID == 605) { return(150); }
	else if (nPUID == 606) { return(150); }
	else if (nPUID == 672) { return(80); }
	else if (nPUID == 673) { return(100); }
	else if (nPUID == 674) { return(80); }
	else if (nPUID == 675) { return(150); }
	else if (nPUID == 676) { return(300); }
	else if (nPUID == 677) { return(400); }
	else if (nPUID == 678) { return(200); }
	else if (nPUID == 685) { return(75); }
	else if (nPUID == 797) { return(125); }
	else if (nPUID == 799) { return(125); }
	else if (nPUID == 801) { return(150); }
	else if (nPUID == 803) { return(300); }
	else if (nPUID == 806) { return(1000); }
	else if (nPUID == 812) { return(200); }
	else if (nPUID == 820) { return(200); }
	else if (nPUID == 821) { return(75); }
	else if (nPUID == 822) { return(100); }
	else if (nPUID == 875) { return(750); }
	else if (nPUID == 876) { return(75); }
	else if (nPUID == 877) { return(80); }
	else if (nPUID == 880) { return(100); }
	return(0);
}

int GetWoodContent(int nPUID=-1)
{
	if (nPUID == 125) { return(100); }
	else if (nPUID == 376) { return(150); }
	else if (nPUID == 383) { return(150); }
	else if (nPUID == 453) { return(150); }
	else if (nPUID == 563) { return(150); }
	else if (nPUID == 601) { return(20000); }
	else if (nPUID == 618) { return(150); }
	else if (nPUID == 639) { return(150); }
	else if (nPUID == 649) { return(150); }
	else if (nPUID == 662) { return(20000); }
	else if (nPUID == 687) { return(150); }
	else if (nPUID == 733) { return(200); }
	else if (nPUID == 735) { return(150); }
	else if (nPUID == 736) { return(150); }
	else if (nPUID == 809) { return(150); }
	else if (nPUID == 839) { return(150); }
	else if (nPUID == 885) { return(150); }
	return(0);
}

mutable int GetGatherRate(int nPUID=-1, int nTargetType=-1)
{
	float fMult=-1.0;
	if (nPUID == 620)
	{
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			return(0.72 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			return(0.48 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			return(0.28 * fMult);
		}
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			return(0.9 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			return(0.72 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			return(0.56 * fMult);
		}
	}
	if (nPUID == 690)
	{
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(2.343 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(2.816 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(1.804 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(1.672 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(1.804 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(2.035 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(3.003 * fMult);
		}
	}
	if (nPUID == 543)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 650)) { fMult = fMult + 0.4; }
			if (PlayerHasTech(xsGetContextPlayer(), 551)) { fMult = fMult + 0.3; }
			return(0.61 * fMult);
		}
	}
	if (nPUID == 880)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.3; }
			return(0.25 * fMult);
		}
	}
	if (nPUID == 134)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			return(1.2 * fMult);
		}
	}
	if (nPUID == 847)
	{
		if (nTargetType == cResourceGold)
	{
			fMult=1.0;
			return(1.5 * fMult);
		}
	}
	if (nPUID == 490)
	{
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 395)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(0.82 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 395)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.01; }
			return(0.98 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.12; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 395)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(0.57 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(0.65 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(0.76 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(0.65 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 395)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.13 * fMult);
		}
	}
	if (nPUID == 807)
	{
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(0.73 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(0.85 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(0.73 * fMult);
		}
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(0.91 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.08 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(0.69 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.23 * fMult);
		}
		if (nTargetType == 869)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(1.09 * fMult);
		}
		if (nTargetType == 870)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(1.09 * fMult);
		}
		if (nTargetType == 871)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(1.09 * fMult);
		}
	}
	if (nPUID == 520)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			return(0.095 * fMult);
		}
	}
	if (nPUID == 619)
	{
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			return(0.72 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			return(0.48 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			return(0.28 * fMult);
		}
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			return(0.9 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			return(0.72 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			return(0.56 * fMult);
		}
	}
	if (nPUID == 518)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			return(0.082 * fMult);
		}
	}
	if (nPUID == 360)
	{
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(0.53 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(0.68 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(0.80 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(0.58 * fMult);
		}
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(1.09 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(0.58 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(1.00 * fMult);
		}
	}
	if (nPUID == 370)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			return(0.10 * fMult);
		}
	}
	if (nPUID == 374)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.3; }
			return(0.25 * fMult);
		}
	}
	if (nPUID == 402)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 650)) { fMult = fMult + 0.4; }
			if (PlayerHasTech(xsGetContextPlayer(), 551)) { fMult = fMult + 0.3; }
			return(0.61 * fMult);
		}
	}
	if (nPUID == 404)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.3; }
			return(0.25 * fMult);
		}
	}
	if (nPUID == 408)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.3; }
			return(0.25 * fMult);
		}
	}
	if (nPUID == 480)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 706)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 708)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 901)) { fMult = fMult + -1.0; }
			if (PlayerHasTech(xsGetContextPlayer(), 710)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 743)) { fMult = fMult + -0.99; }
			if (PlayerHasTech(xsGetContextPlayer(), 792)) { fMult = fMult + -0.847; }
			if (PlayerHasTech(xsGetContextPlayer(), 900)) { fMult = fMult + -0.94; }
			return(0.0 * fMult);
		}
	}
	if (nPUID == 484)
	{
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(0.90 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.08 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(0.69 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(0.73 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(0.85 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(0.73 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.23 * fMult);
		}
	}
	if (nPUID == 487)
	{
		if (nTargetType == 464)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 668)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 494)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 231)) { fMult = fMult + 0.25; }
			return(0.125 * fMult);
		}
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(0.91 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.08 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(0.69 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(0.73 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(0.85 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(0.73 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.23 * fMult);
		}
	}
	if (nPUID == 490)
	{
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 395)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(0.82 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 395)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.01; }
			return(0.98 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.12; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 395)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.01; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(0.57 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(0.65 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(0.76 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(0.65 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 395)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.13 * fMult);
		}
	}
	if (nPUID == 495)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 65)) { fMult = fMult + -0.99; }
			return(0.000 * fMult);
		}
	}
	if (nPUID == 518)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			return(0.082 * fMult);
		}
	}
	if (nPUID == 519)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			return(0.085 * fMult);
		}
	}
	if (nPUID == 520)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			return(0.095 * fMult);
		}
	}
	if (nPUID == 521)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			return(0.115 * fMult);
		}
	}
	if (nPUID == 487)
	{
		if (nTargetType == 464)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 668)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 494)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 231)) { fMult = fMult + 0.25; }
			return(0.125 * fMult);
		}
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(0.91 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.08 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(0.69 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(0.73 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(0.85 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(0.73 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.23 * fMult);
		}
	}
	if (nPUID == 543)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 650)) { fMult = fMult + 0.4; }
			if (PlayerHasTech(xsGetContextPlayer(), 551)) { fMult = fMult + 0.3; }
			return(0.61 * fMult);
		}
	}
	if (nPUID == 544)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 650)) { fMult = fMult + 0.4; }
			if (PlayerHasTech(xsGetContextPlayer(), 551)) { fMult = fMult + 0.3; }
			return(0.54 * fMult);
		}
	}
	if (nPUID == 495)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 65)) { fMult = fMult + -0.99; }
			return(0.000 * fMult);
		}
	}
	if (nPUID == 579)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 706)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 708)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 901)) { fMult = fMult + -1.0; }
			if (PlayerHasTech(xsGetContextPlayer(), 710)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 743)) { fMult = fMult + -0.99; }
			if (PlayerHasTech(xsGetContextPlayer(), 792)) { fMult = fMult + -0.847; }
			if (PlayerHasTech(xsGetContextPlayer(), 900)) { fMult = fMult + -0.94; }
			return(0.0 * fMult);
		}
	}
	if (nPUID == 607)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			return(0.15 * fMult);
		}
	}
	if (nPUID == 619)
	{
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			return(0.72 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			return(0.48 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			return(0.28 * fMult);
		}
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			return(0.9 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			return(0.72 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			return(0.56 * fMult);
		}
	}
	if (nPUID == 620)
	{
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			return(0.72 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			return(0.48 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			return(0.28 * fMult);
		}
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			return(0.9 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			return(0.72 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			return(0.56 * fMult);
		}
	}
	if (nPUID == 821)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.3; }
			return(0.25 * fMult);
		}
	}
	if (nPUID == 646)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 692)) { fMult = fMult + -0.4; }
			return(0.0 * fMult);
		}
		if (nTargetType == cResourceWood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 692)) { fMult = fMult + -0.4; }
			return(0.0 * fMult);
		}
		if (nTargetType == cResourceGold)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 692)) { fMult = fMult + -0.4; }
			return(0.0 * fMult);
		}
	}
	if (nPUID == 688)
	{
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(2.13 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(2.56 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(1.64 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(1.52 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(1.64 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(1.85 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(2.73 * fMult);
		}
	}
	if (nPUID == 688)
	{
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(2.13 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(2.56 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(1.64 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(1.52 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(1.64 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(1.85 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(2.73 * fMult);
		}
	}
	if (nPUID == 695)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 650)) { fMult = fMult + 0.4; }
			if (PlayerHasTech(xsGetContextPlayer(), 551)) { fMult = fMult + 0.3; }
			return(0.61 * fMult);
		}
	}
	if (nPUID == 607)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			return(0.15 * fMult);
		}
	}
	if (nPUID == 807)
	{
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(0.73 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(0.85 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(0.73 * fMult);
		}
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(0.91 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.08 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(0.69 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.23 * fMult);
		}
		if (nTargetType == 869)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(1.09 * fMult);
		}
		if (nTargetType == 870)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(1.09 * fMult);
		}
		if (nTargetType == 871)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(1.09 * fMult);
		}
	}
	if (nPUID == 816)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 968)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 905)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 912)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			return(0.05 * fMult);
		}
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 968)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			return(0.5 * fMult);
		}
		if (nTargetType == cResourceWood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 968)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			return(0.5 * fMult);
		}
		if (nTargetType == cResourceGold)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 968)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			return(0.5 * fMult);
		}
	}
	if (nPUID == 821)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.3; }
			return(0.25 * fMult);
		}
	}
	if (nPUID == 832)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 650)) { fMult = fMult + 0.4; }
			if (PlayerHasTech(xsGetContextPlayer(), 551)) { fMult = fMult + 0.3; }
			return(0.61 * fMult);
		}
	}
	if (nPUID == 844)
	{
		if (nTargetType == cResourceWood)
	{
			fMult=1.0;
			return(10.00 * fMult);
		}
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			return(1.00 * fMult);
		}
	}
	if (nPUID == 880)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.3; }
			return(0.25 * fMult);
		}
	}
	if (nPUID == 484)
	{
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(0.90 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.08 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(0.69 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(0.73 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(0.85 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(0.73 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(1.23 * fMult);
		}
	}
	if (nPUID == 646)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 692)) { fMult = fMult + -0.4; }
			return(0.0 * fMult);
		}
		if (nTargetType == cResourceWood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 692)) { fMult = fMult + -0.4; }
			return(0.0 * fMult);
		}
		if (nTargetType == cResourceGold)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 692)) { fMult = fMult + -0.4; }
			return(0.0 * fMult);
		}
	}
	if (nPUID == 374)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.3; }
			return(0.25 * fMult);
		}
	}
	if (nPUID == 844)
	{
		if (nTargetType == cResourceWood)
	{
			fMult=1.0;
			return(10.00 * fMult);
		}
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			return(1.00 * fMult);
		}
	}
	if (nPUID == 480)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 706)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 708)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 901)) { fMult = fMult + -1.0; }
			if (PlayerHasTech(xsGetContextPlayer(), 710)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 743)) { fMult = fMult + -0.99; }
			if (PlayerHasTech(xsGetContextPlayer(), 792)) { fMult = fMult + -0.847; }
			if (PlayerHasTech(xsGetContextPlayer(), 900)) { fMult = fMult + -0.94; }
			return(0.0 * fMult);
		}
	}
	if (nPUID == 360)
	{
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(0.53 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(0.68 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(0.80 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(0.58 * fMult);
		}
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(1.09 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(0.58 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 319)) { fMult = fMult + 0.25; }
			return(1.00 * fMult);
		}
	}
	if (nPUID == 521)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			return(0.115 * fMult);
		}
	}
	if (nPUID == 134)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			return(1.2 * fMult);
		}
	}
	if (nPUID == 816)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 968)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 905)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 912)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			return(0.05 * fMult);
		}
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 968)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			return(0.5 * fMult);
		}
		if (nTargetType == cResourceWood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 968)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			return(0.5 * fMult);
		}
		if (nTargetType == cResourceGold)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 968)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			return(0.5 * fMult);
		}
	}
	if (nPUID == 519)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			return(0.085 * fMult);
		}
	}
	if (nPUID == 404)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.3; }
			return(0.25 * fMult);
		}
	}
	if (nPUID == 402)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 650)) { fMult = fMult + 0.4; }
			if (PlayerHasTech(xsGetContextPlayer(), 551)) { fMult = fMult + 0.3; }
			return(0.61 * fMult);
		}
	}
	if (nPUID == 544)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 650)) { fMult = fMult + 0.4; }
			if (PlayerHasTech(xsGetContextPlayer(), 551)) { fMult = fMult + 0.3; }
			return(0.54 * fMult);
		}
	}
	if (nPUID == 579)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 706)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 708)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 901)) { fMult = fMult + -1.0; }
			if (PlayerHasTech(xsGetContextPlayer(), 710)) { fMult = fMult + -0.91; }
			if (PlayerHasTech(xsGetContextPlayer(), 743)) { fMult = fMult + -0.99; }
			if (PlayerHasTech(xsGetContextPlayer(), 792)) { fMult = fMult + -0.847; }
			if (PlayerHasTech(xsGetContextPlayer(), 900)) { fMult = fMult + -0.94; }
			return(0.0 * fMult);
		}
	}
	if (nPUID == 408)
	{
		if (nTargetType == cResourceFood)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.3; }
			return(0.25 * fMult);
		}
	}
	if (nPUID == 832)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 650)) { fMult = fMult + 0.4; }
			if (PlayerHasTech(xsGetContextPlayer(), 551)) { fMult = fMult + 0.3; }
			return(0.61 * fMult);
		}
	}
	if (nPUID == 847)
	{
		if (nTargetType == cResourceGold)
	{
			fMult=1.0;
			return(1.5 * fMult);
		}
	}
	if (nPUID == 690)
	{
		if (nTargetType == cUnitTypeGold)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 107)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 109)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 111)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 605)) { fMult = fMult + 0.1; }
			return(2.343 * fMult);
		}
		if (nTargetType == cUnitTypeWood)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(2.816 * fMult);
		}
		if (nTargetType == cUnitTypeWildCrops)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.3; }
			return(1.804 * fMult);
		}
		if (nTargetType == 363)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 80)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 418)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 272)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 81)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 120)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 667)) { fMult = fMult + 0.1; }
			return(1.672 * fMult);
		}
		if (nTargetType == cUnitTypeHerdable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 956)) { fMult = fMult + 0.15; }
			if (PlayerHasTech(xsGetContextPlayer(), 79)) { fMult = fMult + 0.2; }
			return(1.804 * fMult);
		}
		if (nTargetType == cUnitTypeHuntable)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 443)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 316)) { fMult = fMult + 0.2; }
			if (PlayerHasTech(xsGetContextPlayer(), 362)) { fMult = fMult + 0.3; }
			return(2.035 * fMult);
		}
		if (nTargetType == 733)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 585)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 906)) { fMult = fMult + -0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 108)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 557)) { fMult = fMult + 0.05; }
			if (PlayerHasTech(xsGetContextPlayer(), 110)) { fMult = fMult + 0.1; }
			if (PlayerHasTech(xsGetContextPlayer(), 112)) { fMult = fMult + 0.1; }
			return(3.003 * fMult);
		}
	}
	if (nPUID == 695)
	{
		if (nTargetType == cUnitTypeFish)
		{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 650)) { fMult = fMult + 0.4; }
			if (PlayerHasTech(xsGetContextPlayer(), 551)) { fMult = fMult + 0.3; }
			return(0.61 * fMult);
		}
	}
	if (nPUID == 370)
	{
		if (nTargetType == cResourceFavor)
	{
			fMult=1.0;
			if (PlayerHasTech(xsGetContextPlayer(), 673)) { fMult = fMult + -0.34; }
			if (PlayerHasTech(xsGetContextPlayer(), 691)) { fMult = fMult + 0.3; }
			if (PlayerHasTech(xsGetContextPlayer(), 669)) { fMult = fMult + 0.5; }
			if (PlayerHasTech(xsGetContextPlayer(), 590)) { fMult = fMult + 0.1; }
			return(0.10 * fMult);
		}
	}

}

int GetGoldContent(int nPUID=-1)
{
	if (nPUID == 451) { return(6000); }
	else if (nPUID == 562) { return(3000); }
	else if (nPUID == 588) { return(1000); }
	else if (nPUID == 655) { return(1500); }
	else if (nPUID == 869) { return(6000); }
	else if (nPUID == 870) { return(3000); }
	else if (nPUID == 871) { return(1500); }
	return(0);
}

float Chineselookup_GetUnitSpeed(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 826:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 834:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(6.75 * fMult);
			break;
		}
		case 851:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 982)) { fMult = fMult + 0.15; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 813:
		{
			return(0.0);
			break;
		}
		case 837:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 683)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 93)) { fMult = fMult + 0.2; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 824:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 832:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 823:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 847:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 833:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 816:
		{
			return(0.0);
			break;
		}
		case 852:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 831:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 444:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 830:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.5 * fMult);
			break;
		}
		case 815:
		{
			return(0.0);
			break;
		}
		case 842:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 848:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 846:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 924:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.4 * fMult);
			break;
		}
		case 878:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 850:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 926:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 825:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 836:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 843:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 827:
		{
			return(0.0);
			break;
		}
		case 845:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 814:
		{
			return(0.0);
			break;
		}
		case 819:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 818:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 829:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 835:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 849:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 807:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 488)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 828:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.4 * fMult);
			break;
		}
	}
	return(-1.0);
}

float Egyptianlookup_GetUnitSpeed(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 539:
		{
			return(0.0);
			break;
		}
		case 446:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 577:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 521:
		{
			return(0.0);
			break;
		}
		case 520:
		{
			return(0.0);
			break;
		}
		case 573:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.5 * fMult);
			break;
		}
		case 359:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 307)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 153)) { fMult = fMult + 0.2; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 519:
		{
			return(0.0);
			break;
		}
		case 518:
		{
			return(0.0);
			break;
		}
		case 357:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 392:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.4 * fMult);
			break;
		}
		case 424:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 497:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 673:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 415:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 558:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 683)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 93)) { fMult = fMult + 0.2; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 427:
		{
			return(0.0);
			break;
		}
		case 912:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.8 * fMult);
			break;
		}
		case 592:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 677:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 380:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.9 * fMult);
			break;
		}
		case 528:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 499:
		{
			return(0.0);
			break;
		}
		case 537:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 744:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 439:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 676:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 674:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 513:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 307)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 418:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 276)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 473:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 630:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 617:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.9 * fMult);
			break;
		}
		case 648:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 517:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 511:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.6 * fMult);
			break;
		}
		case 579:
		{
			return(0.0);
			break;
		}
		case 370:
		{
			return(0.0);
			break;
		}
		case 587:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.6 * fMult);
			break;
		}
		case 361:
		{
			return(0.0);
			break;
		}
		case 652:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 364:
		{
			return(0.0);
			break;
		}
		case 356:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 672:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 355:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 385:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 602:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 571:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(7.0 * fMult);
			break;
		}
		case 398:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 447:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 678:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 425:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 817)) { fMult = fMult + 0.5; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.6 * fMult);
			break;
		}
		case 490:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 488)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 498:
		{
			return(0.0);
			break;
		}
		case 378:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.2 * fMult);
			break;
		}
		case 675:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 512:
		{
			return(0.0);
			break;
		}
		case 545:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 593:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.6 * fMult);
			break;
		}
	}
	return(-1.0);
}

float Norselookup_GetUnitSpeed(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 570:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(7.0 * fMult);
			break;
		}
		case 394:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.6 * fMult);
			break;
		}
		case 576:
		{
			return(0.0);
			break;
		}
		case 531:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 582:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 749:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 387:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.2 * fMult);
			break;
		}
		case 583:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 474:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 495:
		{
			fAbs = 0.0;
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 320)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 584)) { fAbs = fAbs + 1.0; }
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return((4.3 * fMult) + fAbs);
			break;
		}
		case 360:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 488)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 627:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 930:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 379:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.4 * fMult);
			break;
		}
		case 538:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 127)) { fMult = fMult + 0.1; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 584:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 395:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.2 * fMult);
			break;
		}
		case 393:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 683)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 93)) { fMult = fMult + 0.2; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 543:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 581:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 750:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 585:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(6.6 * fMult);
			break;
		}
		case 484:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 488)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 399:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 397:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 358:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 613:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.75 * fMult);
			break;
		}
		case 485:
		{
			return(0.0);
			break;
		}
		case 491:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 929:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 488:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 549)) { fMult = fMult + 0.1; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 580:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 911:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 396:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.0 * fMult);
			break;
		}
		case 493:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 686:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 572:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 128)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 604:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 390:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 931:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 489:
		{
			return(0.0);
			break;
		}
		case 492:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 444)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 400:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 481:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 320)) { fMult = fMult + 0.5; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.9 * fMult);
			break;
		}
		case 589:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.0 * fMult);
			break;
		}
	}
	return(-1.0);
}

float Greeklookup_GetUnitSpeed(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 578:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 557:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 683)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 93)) { fMult = fMult + 0.2; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 542:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 426:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 487:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 488)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 509)) { fMult = fMult + 0.2; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 507:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 401:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 506:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 368:
		{
			return(0.0);
			break;
		}
		case 500:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 541:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 377:
		{
			return(0.0);
			break;
		}
		case 575:
		{
			return(0.0);
			break;
		}
		case 486:
		{
			return(0.0);
			break;
		}
		case 508:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 625:
		{
			return(0.0);
			break;
		}
		case 553:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 503:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 231)) { fMult = fMult + 0.12; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 510:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.9 * fMult);
			break;
		}
		case 514:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 658:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 471:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 496:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 416:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 445:
		{
			return(0.0);
			break;
		}
		case 586:
		{
			return(0.0);
			break;
		}
		case 910:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 472:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 420:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 555:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 423:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.0 * fMult);
			break;
		}
		case 536:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 628:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 554:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 622:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(6.6 * fMult);
			break;
		}
		case 504:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 364:
		{
			return(0.0);
			break;
		}
		case 369:
		{
			return(0.0);
			break;
		}
		case 567:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 568)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(7.0 * fMult);
			break;
		}
		case 552:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 515:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 594:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 502:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.1 * fMult);
			break;
		}
		case 501:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 551:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 402:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 417:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 568:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 373:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 550:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 509:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.4 * fMult);
			break;
		}
		case 505:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 419:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.2 * fMult);
			break;
		}
	}
	return(-1.0);
}

float Commonlookup_GetUnitSpeed(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 480:
		{
			return(0.0);
			break;
		}
		case 391:
		{
			return(0.0);
			break;
		}
		case 363:
		{
			return(0.0);
			break;
		}
		case 438:
		{
			return(0.0);
			break;
		}
		case 656:
		{
			return(0.0);
			break;
		}
		case 362:
		{
			return(0.0);
			break;
		}
		case 710:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.75 * fMult);
			break;
		}
		case 465:
		{
			return(0.0);
			break;
		}
		case 365:
		{
			return(0.0);
			break;
		}
		case 366:
		{
			return(0.0);
			break;
		}
		case 469:
		{
			return(0.0);
			break;
		}
		case 437:
		{
			return(0.0);
			break;
		}
		case 464:
		{
			return(0.0);
			break;
		}
		case 367:
		{
			return(0.0);
			break;
		}
		case 372:
		{
			return(0.0);
			break;
		}
	}
	return(-1.0);
}

float Otherslookup_GetUnitSpeed(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 752:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 612:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(1.5 * fMult);
			break;
		}
		case 620:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 452:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.7 * fMult);
			break;
		}
		case 467:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 812:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 436:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 413:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 374:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.5 * fMult);
			break;
		}
		case 564:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.7 * fMult);
			break;
		}
		case 382:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 591:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 927:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.5 * fMult);
			break;
		}
		case 793:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 779:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 525:
		{
			return(5.0);
			break;
		}
		case 882:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 855:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 880:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.5 * fMult);
			break;
		}
		case 684:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 730:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 776:
		{
			return(0.0);
			break;
		}
		case 629:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 900:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 905:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 860:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 544:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 375:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 432:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.7 * fMult);
			break;
		}
		case 889:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.7 * fMult);
			break;
		}
		case 434:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 901:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 902:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 182:
		{
			return(-2.0);
			break;
		}
		case 771:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 408:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.5 * fMult);
			break;
		}
		case 459:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.1 * fMult);
			break;
		}
		case 753:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.6 * fMult);
			break;
		}
		case 859:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.0 * fMult);
			break;
		}
		case 460:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.5 * fMult);
			break;
		}
		case 803:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 751:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.75 * fMult);
			break;
		}
		case 760:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 574:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 646:
		{
			return(0.0);
			break;
		}
		case 800:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 796:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 903:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 614:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.9 * fMult);
			break;
		}
		case 801:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.2 * fMult);
			break;
		}
		case 650:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 747:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 774:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 788:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.75 * fMult);
			break;
		}
		case 414:
		{
			fAbs = 0.0;
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 281)) { fAbs = fAbs + 1.0; }
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return((5.2 * fMult) + fAbs);
			break;
		}
		case 728:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.6 * fMult);
			break;
		}
		case 607:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.5 * fMult);
			break;
		}
		case 660:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 206:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 907:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 389:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 802:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 444)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 597:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 605:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.2 * fMult);
			break;
		}
		case 569:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 596:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 516:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 381:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 456:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 898:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 917:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(60.0 * fMult);
			break;
		}
		case 556:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 777:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 754:
		{
			return(-2.0);
			break;
		}
		case 606:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.2 * fMult);
			break;
		}
		case 661:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 772:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 928:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 457:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 858:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 608:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 821:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.5 * fMult);
			break;
		}
		case 799:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 463:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 916:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 477:
		{
			return(-2.0);
			break;
		}
		case 640:
		{
			return(0.0);
			break;
		}
		case 787:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 476:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 654:
		{
			return(0.0);
			break;
		}
		case 665:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 822:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 429:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 405:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.2 * fMult);
			break;
		}
		case 619:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 636:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 535:
		{
			return(0.0);
			break;
		}
		case 856:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 904:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 679:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 773:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 844:
		{
			return(0.0);
			break;
		}
		case 600:
		{
			return(0.0);
			break;
		}
		case 193:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 560:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 798:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 881:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 409:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(60.0 * fMult);
			break;
		}
		case 653:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 657:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 683:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 410:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.2 * fMult);
			break;
		}
		case 795:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 411:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 854:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 422:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 884:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 524:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 624:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.6 * fMult);
			break;
		}
		case 431:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 853:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 134:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.6 * fMult);
			break;
		}
		case 817:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 590:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 785:
		{
			return(0.0);
			break;
		}
		case 433:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.7 * fMult);
			break;
		}
		case 875:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 435:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 615:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.9 * fMult);
			break;
		}
		case 890:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.7 * fMult);
			break;
		}
		case 386:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 450:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.75 * fMult);
			break;
		}
		case 540:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 666:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 668:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 404:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.5 * fMult);
			break;
		}
		case 529:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 761:
		{
			return(0.0);
			break;
		}
		case 877:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 458:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 820:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 603:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 443:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 546:
		{
			return(0.0);
			break;
		}
		case 634:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.5 * fMult);
			break;
		}
		case 626:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 595:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 412:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.2 * fMult);
			break;
		}
		case 530:
		{
			return(0.0);
			break;
		}
		case 651:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 479:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.2 * fMult);
			break;
		}
		case 741:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 430:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 208:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 664:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 797:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 906:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(0.0 * fMult);
			break;
		}
	}
	return(-1.0);
}

float Atlanteanlookup_GetUnitSpeed(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 732:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 766)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 703:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 699:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 714:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 770)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.5 * fMult);
			break;
		}
		case 691:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.5 * fMult);
			break;
		}
		case 727:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.75 * fMult);
			break;
		}
		case 701:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(6.05 * fMult);
			break;
		}
		case 704:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.9 * fMult);
			break;
		}
		case 711:
		{
			return(0.0);
			break;
		}
		case 692:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.6 * fMult);
			break;
		}
		case 697:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.33 * fMult);
			break;
		}
		case 734:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.3 * fMult);
			break;
		}
		case 715:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 770)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 729:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.2 * fMult);
			break;
		}
		case 689:
		{
			return(0.0);
			break;
		}
		case 690:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 745)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 488)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.45 * fMult);
			break;
		}
		case 716:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 726:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 717:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(5.3 * fMult);
			break;
		}
		case 713:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.05 * fMult);
			break;
		}
		case 737:
		{
			return(0.0);
			break;
		}
		case 731:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(5.5 * fMult);
			break;
		}
		case 698:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(6.75 * fMult);
			break;
		}
		case 709:
		{
			return(0.0);
			break;
		}
		case 712:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.75 * fMult);
			break;
		}
		case 725:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 720:
		{
			return(0.0);
			break;
		}
		case 722:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.0 * fMult);
			break;
		}
		case 688:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 488)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 745)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(3.25 * fMult);
			break;
		}
		case 694:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 696:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(7.25 * fMult);
			break;
		}
		case 757:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.1 * fMult);
			break;
		}
		case 695:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 985)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(4.8 * fMult);
			break;
		}
		case 745:
		{
			return(0.0);
			break;
		}
		case 719:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 746:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.5 * fMult);
			break;
		}
		case 700:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 130)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 131)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 774)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 489)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(5.75 * fMult);
			break;
		}
		case 913:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 137)) { fMult = fMult + 0.2; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			return(2.4 * fMult);
			break;
		}
		case 739:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(3.75 * fMult);
			break;
		}
		case 724:
		{
			return(0.0);
			break;
		}
		case 702:
		{
			return(0.0);
			break;
		}
		case 706:
		{
			return(-2.0);
			break;
		}
		case 738:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 766)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.5 * fMult);
			break;
		}
		case 723:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 718:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(0.0 * fMult);
			break;
		}
		case 693:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(3.9 * fMult);
			break;
		}
		case 707:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 705:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 683)) { fMult = fMult + 0.15; } //BasePercent
			if (PlayerHasTech(nOwner, 93)) { fMult = fMult + 0.2; } //BasePercent
			return(3.8 * fMult);
			break;
		}
		case 740:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 640)) { fMult = fMult + 0.12; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 691)) { fMult = fMult + 0.2; } //BasePercent
			return(4.3 * fMult);
			break;
		}
		case 708:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 680)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 961)) { fMult = fMult + 0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 946)) { fMult = fMult + 0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 710)) { fMult = fMult + 0.1; } //BasePercent
			return(4.6 * fMult);
			break;
		}
	}
	return(-1.0);
}

float GetUnitSpeed(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float retval = -1.0;
	if (nCultureStart==cCultureGreek) { retval = Greeklookup_GetUnitSpeed(nPUID, nOwner); }
	else if (nCultureStart==cCultureEgyptian) { retval = Egyptianlookup_GetUnitSpeed(nPUID, nOwner); }
	else if (nCultureStart==cCultureNorse) { retval = Norselookup_GetUnitSpeed(nPUID, nOwner); }
	else if (nCultureStart==cCultureAtlantean) { retval = Atlanteanlookup_GetUnitSpeed(nPUID, nOwner); }
	else if (nCultureStart==cCultureChinese) { retval = Chineselookup_GetUnitSpeed(nPUID, nOwner); }
	if (retval == -1.0 && nCultureStart != cCultureGreek) { retval = Greeklookup_GetUnitSpeed(nPUID, nOwner); }
	if (retval == -1.0 && nCultureStart != cCultureEgyptian) { retval = Egyptianlookup_GetUnitSpeed(nPUID, nOwner); }
	if (retval == -1.0 && nCultureStart != cCultureNorse) { retval = Norselookup_GetUnitSpeed(nPUID, nOwner); }
	if (retval == -1.0 && nCultureStart != cCultureAtlantean) { retval = Atlanteanlookup_GetUnitSpeed(nPUID, nOwner); }
	if (retval == -1.0 && nCultureStart != cCultureChinese) { retval = Chineselookup_GetUnitSpeed(nPUID, nOwner); }
	if (retval == -1.0) { retval = Otherslookup_GetUnitSpeed(nPUID, nOwner); }
	return(retval);
}
float Chineselookup_GetUnitTrainPoints(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 826:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 936)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 937)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 981)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(15.0 * fMult);
			break;
		}
		case 834:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 851:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 813:
		{
			return(-2.0);
			break;
		}
		case 837:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 824:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 935)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 934)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(15.0 * fMult);
			break;
		}
		case 832:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 823:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 934)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 935)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 313)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 411)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 412)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(15.0 * fMult);
			break;
		}
		case 847:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 833:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 816:
		{
			return(-2.0);
			break;
		}
		case 852:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 831:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 444:
		{
			return(-2.0);
			break;
		}
		case 830:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 815:
		{
			return(-2.0);
			break;
		}
		case 842:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 848:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 846:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 924:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 981)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(24.0 * fMult);
			break;
		}
		case 878:
		{
			return(-2.0);
			break;
		}
		case 850:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 926:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 936)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 937)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 981)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(15.0 * fMult);
			break;
		}
		case 825:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 936)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 937)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 981)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(18.0 * fMult);
			break;
		}
		case 836:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(19.0 * fMult);
			break;
		}
		case 843:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(16.0 * fMult);
			break;
		}
		case 827:
		{
			return(-2.0);
			break;
		}
		case 845:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 814:
		{
			return(-2.0);
			break;
		}
		case 819:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 932)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 933)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 313)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 411)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 412)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 965)) { fMult = fMult + -0.15; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 818:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 932)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 933)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 965)) { fMult = fMult + -0.15; } //BasePercent
			return(12.0 * fMult);
			break;
		}
		case 829:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 981)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(20.0 * fMult);
			break;
		}
		case 835:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 849:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 807:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 673)) { fMult = fMult + 1.0; } //BasePercent
			if (PlayerHasTech(nOwner, 970)) { fMult = fMult + -0.3; } //BasePercent
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 828:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 981)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(24.0 * fMult);
			break;
		}
	}
	return(-1.0);
}

float Egyptianlookup_GetUnitTrainPoints(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 539:
		{
			return(-2.0);
			break;
		}
		case 446:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 577:
		{
			return(-2.0);
			break;
		}
		case 521:
		{
			return(-2.0);
			break;
		}
		case 520:
		{
			return(-2.0);
			break;
		}
		case 573:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 359:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 627)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 115)) { fMult = fMult + -0.67; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 628)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(7.0 * fMult);
			break;
		}
		case 519:
		{
			return(-2.0);
			break;
		}
		case 518:
		{
			return(-2.0);
			break;
		}
		case 357:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 625)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 626)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 313)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 411)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 412)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(14.0 * fMult);
			break;
		}
		case 392:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(24.0 * fMult);
			break;
		}
		case 424:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 497:
		{
			return(-2.0);
			break;
		}
		case 673:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(3.0 * fMult);
			break;
		}
		case 415:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 558:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 427:
		{
			return(-2.0);
			break;
		}
		case 912:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 625)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 626)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(8.0 * fMult);
			break;
		}
		case 592:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 677:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 380:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(22.0 * fMult);
			break;
		}
		case 528:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 673)) { fMult = fMult + 2.0; } //BasePercent
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(3.0 * fMult);
			break;
		}
		case 499:
		{
			return(-2.0);
			break;
		}
		case 537:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 744:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 439:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(10.0 * fMult);
			break;
		}
		case 676:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 674:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 513:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 115)) { fMult = fMult + -0.67; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 627)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 313)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 628)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 411)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 412)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(6.0 * fMult);
			break;
		}
		case 418:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 473:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(24.0 * fMult);
			break;
		}
		case 630:
		{
			return(-2.0);
			break;
		}
		case 617:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 627)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 115)) { fMult = fMult + -0.67; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 628)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(15.0 * fMult);
			break;
		}
		case 648:
		{
			return(-2.0);
			break;
		}
		case 517:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 673)) { fMult = fMult + 4.0; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(1.0 * fMult);
			break;
		}
		case 511:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 579:
		{
			return(-2.0);
			break;
		}
		case 370:
		{
			return(-2.0);
			break;
		}
		case 587:
		{
			return(-2.0);
			break;
		}
		case 361:
		{
			return(-2.0);
			break;
		}
		case 652:
		{
			return(-2.0);
			break;
		}
		case 364:
		{
			return(-2.0);
			break;
		}
		case 356:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 625)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 626)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(10.0 * fMult);
			break;
		}
		case 672:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(3.0 * fMult);
			break;
		}
		case 355:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 625)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 626)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(9.0 * fMult);
			break;
		}
		case 385:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 602:
		{
			return(-2.0);
			break;
		}
		case 571:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 398:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 447:
		{
			return(-2.0);
			break;
		}
		case 678:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 425:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 490:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 673)) { fMult = fMult + 1.0; } //BasePercent
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 498:
		{
			return(-2.0);
			break;
		}
		case 378:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 675:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 512:
		{
			return(-2.0);
			break;
		}
		case 545:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(19.0 * fMult);
			break;
		}
		case 593:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
	}
	return(-1.0);
}

float Norselookup_GetUnitTrainPoints(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 570:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 394:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 576:
		{
			return(-2.0);
			break;
		}
		case 531:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 638)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 639)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(9.0 * fMult);
			break;
		}
		case 582:
		{
			return(-2.0);
			break;
		}
		case 749:
		{
			return(-2.0);
			break;
		}
		case 387:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(24.0 * fMult);
			break;
		}
		case 583:
		{
			return(-2.0);
			break;
		}
		case 474:
		{
			return(-2.0);
			break;
		}
		case 495:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 320)) { fMult = fMult + -0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 636)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 637)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(23.0 * fMult);
			break;
		}
		case 360:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 673)) { fMult = fMult + 1.0; } //BasePercent
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(16.0 * fMult);
			break;
		}
		case 627:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 930:
		{
			return(-2.0);
			break;
		}
		case 379:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 538:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 584:
		{
			return(-2.0);
			break;
		}
		case 395:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 393:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 543:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 581:
		{
			return(-2.0);
			break;
		}
		case 750:
		{
			return(-2.0);
			break;
		}
		case 585:
		{
			return(-2.0);
			break;
		}
		case 484:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 673)) { fMult = fMult + 1.0; } //BasePercent
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 399:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 397:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(10.0 * fMult);
			break;
		}
		case 358:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 320)) { fMult = fMult + -0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 637)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 636)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(18.0 * fMult);
			break;
		}
		case 613:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(19.0 * fMult);
			break;
		}
		case 485:
		{
			return(-2.0);
			break;
		}
		case 491:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 320)) { fMult = fMult + -0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 636)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 637)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(16.0 * fMult);
			break;
		}
		case 929:
		{
			return(-2.0);
			break;
		}
		case 488:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 549)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			return(15.0 * fMult);
			break;
		}
		case 580:
		{
			return(-2.0);
			break;
		}
		case 911:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 313)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 411)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 412)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 638)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 639)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(15.0 * fMult);
			break;
		}
		case 396:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 493:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 638)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 639)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(9.0 * fMult);
			break;
		}
		case 686:
		{
			return(-2.0);
			break;
		}
		case 572:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 604:
		{
			return(-2.0);
			break;
		}
		case 390:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 931:
		{
			return(-2.0);
			break;
		}
		case 489:
		{
			return(-2.0);
			break;
		}
		case 492:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 320)) { fMult = fMult + -0.1; } //BasePercent
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 636)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 637)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(9.0 * fMult);
			break;
		}
		case 400:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 481:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(8.0 * fMult);
			break;
		}
		case 589:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
	}
	return(-1.0);
}

float Greeklookup_GetUnitTrainPoints(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 578:
		{
			return(-2.0);
			break;
		}
		case 557:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 542:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 426:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 487:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 673)) { fMult = fMult + 1.0; } //BasePercent
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 507:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 313)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 411)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 412)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(9.0 * fMult);
			break;
		}
		case 401:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 506:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(10.0 * fMult);
			break;
		}
		case 368:
		{
			return(-2.0);
			break;
		}
		case 500:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 541:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(23.0 * fMult);
			break;
		}
		case 377:
		{
			return(-2.0);
			break;
		}
		case 575:
		{
			return(-2.0);
			break;
		}
		case 486:
		{
			return(-2.0);
			break;
		}
		case 508:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 313)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 411)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 412)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(15.0 * fMult);
			break;
		}
		case 625:
		{
			return(-2.0);
			break;
		}
		case 553:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 503:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(14.0 * fMult);
			break;
		}
		case 510:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(24.0 * fMult);
			break;
		}
		case 514:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 658)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(14.0 * fMult);
			break;
		}
		case 658:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 313)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 658)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 411)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 412)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(14.0 * fMult);
			break;
		}
		case 471:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 366)) { fMult = fMult + -0.5; }//Percent: will be inaccurate if mixed with BasePercent!
			return(6.0 * fMult);
			break;
		}
		case 496:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(23.0 * fMult);
			break;
		}
		case 416:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 445:
		{
			return(-2.0);
			break;
		}
		case 586:
		{
			return(-2.0);
			break;
		}
		case 910:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(8.0 * fMult);
			break;
		}
		case 472:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 420:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 555:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(27.0 * fMult);
			break;
		}
		case 423:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(24.0 * fMult);
			break;
		}
		case 536:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(19.0 * fMult);
			break;
		}
		case 628:
		{
			return(-2.0);
			break;
		}
		case 554:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(23.0 * fMult);
			break;
		}
		case 622:
		{
			return(-2.0);
			break;
		}
		case 504:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(9.0 * fMult);
			break;
		}
		case 364:
		{
			return(-2.0);
			break;
		}
		case 369:
		{
			return(-2.0);
			break;
		}
		case 567:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 568)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 552:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(27.0 * fMult);
			break;
		}
		case 515:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 658)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(17.0 * fMult);
			break;
		}
		case 594:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 502:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(27.0 * fMult);
			break;
		}
		case 501:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 551:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 402:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 417:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 568:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 373:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 506)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 550:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 509:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(19.0 * fMult);
			break;
		}
		case 505:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 66)) { fMult = fMult + -0.25; } //BasePercent
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(20.0 * fMult);
			break;
		}
		case 419:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
	}
	return(-1.0);
}

float Commonlookup_GetUnitTrainPoints(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 480:
		{
			return(-2.0);
			break;
		}
		case 391:
		{
			return(-2.0);
			break;
		}
		case 363:
		{
			return(-2.0);
			break;
		}
		case 438:
		{
			return(-2.0);
			break;
		}
		case 656:
		{
			return(-2.0);
			break;
		}
		case 362:
		{
			return(-2.0);
			break;
		}
		case 710:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(2.0 * fMult);
			break;
		}
		case 465:
		{
			return(-2.0);
			break;
		}
		case 365:
		{
			return(-2.0);
			break;
		}
		case 366:
		{
			return(-2.0);
			break;
		}
		case 469:
		{
			return(-2.0);
			break;
		}
		case 437:
		{
			return(-2.0);
			break;
		}
		case 464:
		{
			return(-2.0);
			break;
		}
		case 367:
		{
			return(-2.0);
			break;
		}
		case 372:
		{
			return(-2.0);
			break;
		}
	}
	return(-1.0);
}

float Otherslookup_GetUnitTrainPoints(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 752:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(23.0 * fMult);
			break;
		}
		case 612:
		{
			return(-2.0);
			break;
		}
		case 620:
		{
			return(-2.0);
			break;
		}
		case 452:
		{
			return(-2.0);
			break;
		}
		case 467:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(10.0 * fMult);
			break;
		}
		case 812:
		{
			return(-2.0);
			break;
		}
		case 436:
		{
			return(-2.0);
			break;
		}
		case 413:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(2.0 * fMult);
			break;
		}
		case 374:
		{
			return(-2.0);
			break;
		}
		case 564:
		{
			return(-2.0);
			break;
		}
		case 382:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 591:
		{
			return(-2.0);
			break;
		}
		case 927:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 793:
		{
			return(-2.0);
			break;
		}
		case 779:
		{
			return(-2.0);
			break;
		}
		case 525:
		{
			return(-2.0);
			break;
		}
		case 882:
		{
			return(-2.0);
			break;
		}
		case 855:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(14.0 * fMult);
			break;
		}
		case 880:
		{
			return(-2.0);
			break;
		}
		case 684:
		{
			return(-2.0);
			break;
		}
		case 730:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(10.0 * fMult);
			break;
		}
		case 776:
		{
			return(-2.0);
			break;
		}
		case 629:
		{
			return(-2.0);
			break;
		}
		case 900:
		{
			return(-2.0);
			break;
		}
		case 905:
		{
			return(-2.0);
			break;
		}
		case 860:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 544:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(14.0 * fMult);
			break;
		}
		case 375:
		{
			return(-2.0);
			break;
		}
		case 432:
		{
			return(-2.0);
			break;
		}
		case 889:
		{
			return(-2.0);
			break;
		}
		case 434:
		{
			return(-2.0);
			break;
		}
		case 901:
		{
			return(-2.0);
			break;
		}
		case 902:
		{
			return(-2.0);
			break;
		}
		case 182:
		{
			return(-2.0);
			break;
		}
		case 771:
		{
			return(-2.0);
			break;
		}
		case 408:
		{
			return(-2.0);
			break;
		}
		case 459:
		{
			return(-2.0);
			break;
		}
		case 753:
		{
			return(-2.0);
			break;
		}
		case 859:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 460:
		{
			return(-2.0);
			break;
		}
		case 803:
		{
			return(-2.0);
			break;
		}
		case 751:
		{
			return(-2.0);
			break;
		}
		case 760:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 574:
		{
			return(-2.0);
			break;
		}
		case 646:
		{
			return(-2.0);
			break;
		}
		case 800:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 796:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(2.0 * fMult);
			break;
		}
		case 903:
		{
			return(-2.0);
			break;
		}
		case 614:
		{
			return(-2.0);
			break;
		}
		case 801:
		{
			return(-2.0);
			break;
		}
		case 650:
		{
			return(-2.0);
			break;
		}
		case 747:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(12.0 * fMult);
			break;
		}
		case 774:
		{
			return(-2.0);
			break;
		}
		case 788:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(16.0 * fMult);
			break;
		}
		case 414:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(22.0 * fMult);
			break;
		}
		case 728:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(10.0 * fMult);
			break;
		}
		case 607:
		{
			return(-2.0);
			break;
		}
		case 660:
		{
			return(-2.0);
			break;
		}
		case 206:
		{
			return(-2.0);
			break;
		}
		case 907:
		{
			return(-2.0);
			break;
		}
		case 389:
		{
			return(-2.0);
			break;
		}
		case 802:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(9.0 * fMult);
			break;
		}
		case 597:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(6.0 * fMult);
			break;
		}
		case 605:
		{
			return(-2.0);
			break;
		}
		case 569:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 596:
		{
			return(-2.0);
			break;
		}
		case 516:
		{
			return(-2.0);
			break;
		}
		case 381:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(3.0 * fMult);
			break;
		}
		case 456:
		{
			return(-2.0);
			break;
		}
		case 898:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(10.0 * fMult);
			break;
		}
		case 917:
		{
			return(-2.0);
			break;
		}
		case 556:
		{
			return(-2.0);
			break;
		}
		case 777:
		{
			return(-2.0);
			break;
		}
		case 754:
		{
			return(600.0);
			break;
		}
		case 606:
		{
			return(-2.0);
			break;
		}
		case 661:
		{
			return(-2.0);
			break;
		}
		case 772:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(24.0 * fMult);
			break;
		}
		case 928:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 457:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(5.0 * fMult);
			break;
		}
		case 858:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(600.0 * fMult);
			break;
		}
		case 608:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(600.0 * fMult);
			break;
		}
		case 821:
		{
			return(-2.0);
			break;
		}
		case 799:
		{
			return(-2.0);
			break;
		}
		case 463:
		{
			return(-2.0);
			break;
		}
		case 916:
		{
			return(-2.0);
			break;
		}
		case 477:
		{
			return(600.0);
			break;
		}
		case 640:
		{
			return(-2.0);
			break;
		}
		case 787:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(600.0 * fMult);
			break;
		}
		case 476:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(600.0 * fMult);
			break;
		}
		case 654:
		{
			return(-2.0);
			break;
		}
		case 665:
		{
			return(-2.0);
			break;
		}
		case 822:
		{
			return(-2.0);
			break;
		}
		case 429:
		{
			return(-2.0);
			break;
		}
		case 405:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(3.0 * fMult);
			break;
		}
		case 619:
		{
			return(-2.0);
			break;
		}
		case 636:
		{
			return(-2.0);
			break;
		}
		case 535:
		{
			return(-2.0);
			break;
		}
		case 856:
		{
			return(-2.0);
			break;
		}
		case 904:
		{
			return(-2.0);
			break;
		}
		case 679:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(10.0 * fMult);
			break;
		}
		case 773:
		{
			return(-2.0);
			break;
		}
		case 844:
		{
			return(-2.0);
			break;
		}
		case 600:
		{
			return(-2.0);
			break;
		}
		case 193:
		{
			return(-2.0);
			break;
		}
		case 560:
		{
			return(-2.0);
			break;
		}
		case 798:
		{
			return(-2.0);
			break;
		}
		case 881:
		{
			return(-2.0);
			break;
		}
		case 409:
		{
			return(-2.0);
			break;
		}
		case 653:
		{
			return(-2.0);
			break;
		}
		case 657:
		{
			return(-2.0);
			break;
		}
		case 683:
		{
			return(-2.0);
			break;
		}
		case 410:
		{
			return(-2.0);
			break;
		}
		case 795:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(2.0 * fMult);
			break;
		}
		case 411:
		{
			return(-2.0);
			break;
		}
		case 854:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 422:
		{
			return(-2.0);
			break;
		}
		case 884:
		{
			return(-2.0);
			break;
		}
		case 524:
		{
			return(-2.0);
			break;
		}
		case 624:
		{
			return(-2.0);
			break;
		}
		case 431:
		{
			return(-2.0);
			break;
		}
		case 853:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 134:
		{
			return(-2.0);
			break;
		}
		case 817:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 935)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 934)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(12.0 * fMult);
			break;
		}
		case 590:
		{
			return(-2.0);
			break;
		}
		case 785:
		{
			return(-2.0);
			break;
		}
		case 433:
		{
			return(-2.0);
			break;
		}
		case 875:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(10.0 * fMult);
			break;
		}
		case 435:
		{
			return(-2.0);
			break;
		}
		case 615:
		{
			return(-2.0);
			break;
		}
		case 890:
		{
			return(-2.0);
			break;
		}
		case 386:
		{
			return(-2.0);
			break;
		}
		case 450:
		{
			return(-2.0);
			break;
		}
		case 540:
		{
			return(-2.0);
			break;
		}
		case 666:
		{
			return(-2.0);
			break;
		}
		case 668:
		{
			return(-2.0);
			break;
		}
		case 404:
		{
			return(-2.0);
			break;
		}
		case 529:
		{
			return(-2.0);
			break;
		}
		case 761:
		{
			return(-2.0);
			break;
		}
		case 877:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(4.0 * fMult);
			break;
		}
		case 458:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(3.0 * fMult);
			break;
		}
		case 820:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(3.0 * fMult);
			break;
		}
		case 603:
		{
			return(-2.0);
			break;
		}
		case 443:
		{
			return(-2.0);
			break;
		}
		case 546:
		{
			return(-2.0);
			break;
		}
		case 634:
		{
			return(-2.0);
			break;
		}
		case 626:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 595:
		{
			return(-2.0);
			break;
		}
		case 412:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(2.0 * fMult);
			break;
		}
		case 530:
		{
			return(-2.0);
			break;
		}
		case 651:
		{
			return(-2.0);
			break;
		}
		case 479:
		{
			return(-2.0);
			break;
		}
		case 741:
		{
			return(-2.0);
			break;
		}
		case 430:
		{
			return(-2.0);
			break;
		}
		case 208:
		{
			return(-2.0);
			break;
		}
		case 664:
		{
			return(-2.0);
			break;
		}
		case 797:
		{
			return(-2.0);
			break;
		}
		case 906:
		{
			return(-2.0);
			break;
		}
	}
	return(-1.0);
}

float Atlanteanlookup_GetUnitTrainPoints(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float fMult = -1;
	float fAbs = -1;
	switch (nPUID)
	{
		case 732:
		{
			return(-2.0);
			break;
		}
		case 703:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 737)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 740)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(20.0 * fMult);
			break;
		}
		case 699:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(17.0 * fMult);
			break;
		}
		case 714:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 737)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 740)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(14.0 * fMult);
			break;
		}
		case 691:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 736)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 739)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(12.0 * fMult);
			break;
		}
		case 727:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 701:
		{
			return(-2.0);
			break;
		}
		case 704:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(24.0 * fMult);
			break;
		}
		case 711:
		{
			return(-2.0);
			break;
		}
		case 692:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 738)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 741)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(10.0 * fMult);
			break;
		}
		case 697:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(19.0 * fMult);
			break;
		}
		case 734:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(24.0 * fMult);
			break;
		}
		case 715:
		{
			return(-2.0);
			break;
		}
		case 729:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(16.0 * fMult);
			break;
		}
		case 689:
		{
			return(-2.0);
			break;
		}
		case 690:
		{
			return(-2.0);
			break;
		}
		case 716:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 737)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 740)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 313)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 411)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 412)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(14.0 * fMult);
			break;
		}
		case 726:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 717:
		{
			return(-2.0);
			break;
		}
		case 713:
		{
			return(-2.0);
			break;
		}
		case 737:
		{
			return(-2.0);
			break;
		}
		case 731:
		{
			return(-2.0);
			break;
		}
		case 698:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 709:
		{
			return(-2.0);
			break;
		}
		case 712:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 736)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 739)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 313)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 411)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 412)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(12.0 * fMult);
			break;
		}
		case 725:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(18.0 * fMult);
			break;
		}
		case 720:
		{
			return(-2.0);
			break;
		}
		case 722:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 688:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 673)) { fMult = fMult + 1.0; } //BasePercent
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(35.0 * fMult);
			break;
		}
		case 694:
		{
			return(-2.0);
			break;
		}
		case 696:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(12.0 * fMult);
			break;
		}
		case 757:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 695:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 578)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(18.0 * fMult);
			break;
		}
		case 745:
		{
			return(-2.0);
			break;
		}
		case 719:
		{
			return(-2.0);
			break;
		}
		case 746:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(8.0 * fMult);
			break;
		}
		case 700:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 736)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 739)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 413)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 414)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(17.0 * fMult);
			break;
		}
		case 913:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(19.0 * fMult);
			break;
		}
		case 739:
		{
			return(-2.0);
			break;
		}
		case 724:
		{
			return(-2.0);
			break;
		}
		case 702:
		{
			return(-2.0);
			break;
		}
		case 706:
		{
			return(-2.0);
			break;
		}
		case 738:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 723:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(9.0 * fMult);
			break;
		}
		case 718:
		{
			return(-2.0);
			break;
		}
		case 693:
		{
			return(-2.0);
			break;
		}
		case 707:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 738)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 643)) { fMult = fMult + -0.15; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 741)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 102)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 410)) { fMult = fMult + -0.2; }//Percent: will be inaccurate if mixed with BasePercent!
			return(12.0 * fMult);
			break;
		}
		case 705:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(15.0 * fMult);
			break;
		}
		case 740:
		{
			fMult = 1.0;
			if (PlayerHasTech(nOwner, 808)) { fMult = fMult + -0.4; } //BasePercent
			if (PlayerHasTech(nOwner, 124)) { fMult = fMult + -0.95; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 603)) { fMult = fMult + -0.25; }//Percent: will be inaccurate if mixed with BasePercent!
			if (PlayerHasTech(nOwner, 948)) { fMult = fMult + -0.4; } //BasePercent
			return(20.0 * fMult);
			break;
		}
		case 708:
		{
			return(-2.0);
			break;
		}
	}
	return(-1.0);
}

float GetUnitTrainPoints(int nPUID=-1, int nOwner=-1, int nCultureStart=-1)
{
	float retval = -1.0;
	if (nCultureStart==cCultureGreek) { retval = Greeklookup_GetUnitTrainPoints(nPUID, nOwner); }
	else if (nCultureStart==cCultureEgyptian) { retval = Egyptianlookup_GetUnitTrainPoints(nPUID, nOwner); }
	else if (nCultureStart==cCultureNorse) { retval = Norselookup_GetUnitTrainPoints(nPUID, nOwner); }
	else if (nCultureStart==cCultureAtlantean) { retval = Atlanteanlookup_GetUnitTrainPoints(nPUID, nOwner); }
	else if (nCultureStart==cCultureChinese) { retval = Chineselookup_GetUnitTrainPoints(nPUID, nOwner); }
	if (retval == -1.0 && nCultureStart != cCultureGreek) { retval = Greeklookup_GetUnitTrainPoints(nPUID, nOwner); }
	if (retval == -1.0 && nCultureStart != cCultureEgyptian) { retval = Egyptianlookup_GetUnitTrainPoints(nPUID, nOwner); }
	if (retval == -1.0 && nCultureStart != cCultureNorse) { retval = Norselookup_GetUnitTrainPoints(nPUID, nOwner); }
	if (retval == -1.0 && nCultureStart != cCultureAtlantean) { retval = Atlanteanlookup_GetUnitTrainPoints(nPUID, nOwner); }
	if (retval == -1.0 && nCultureStart != cCultureChinese) { retval = Chineselookup_GetUnitTrainPoints(nPUID, nOwner); }
	if (retval == -1.0) { retval = Otherslookup_GetUnitTrainPoints(nPUID, nOwner); }
	return(retval);
}
int GetTechResearchPoints(int techID=-1)
{
	if(techID == 3) { return(20.0000); } // Medium Archers
	else if(techID == 4) { return(30.0000); } // Heavy Archers
	else if(techID == 5) { return(40.0000); } // Champion Archers
	else if(techID == 6) { return(20.0000); } // Medium Infantry
	else if(techID == 7) { return(30.0000); } // Heavy Infantry
	else if(techID == 8) { return(40.0000); } // Champion Infantry
	else if(techID == 9) { return(30.0000); } // Husbandry
	else if(techID == 10) { return(40.0000); } // Plow
	else if(techID == 11) { return(30.0000); } // Irrigation
	else if(techID == 12) { return(30.0000); } // Copper Weapons
	else if(techID == 13) { return(40.0000); } // Bronze Weapons
	else if(techID == 14) { return(50.0000); } // Iron Weapons
	else if(techID == 15) { return(30.0000); } // Copper Mail
	else if(techID == 16) { return(40.0000); } // Bronze Mail
	else if(techID == 17) { return(50.0000); } // Iron Mail
	else if(techID == 18) { return(30.0000); } // Copper Shields
	else if(techID == 19) { return(40.0000); } // Bronze Shields
	else if(techID == 20) { return(50.0000); } // Iron Shields
	else if(techID == 21) { return(30.0000); } // Ambassadors
	else if(techID == 22) { return(35.0000); } // Tax Collectors
	else if(techID == 23) { return(40.0000); } // Coinage
	else if(techID == 24) { return(20.0000); } // Medium Cavalry
	else if(techID == 25) { return(30.0000); } // Heavy Cavalry
	else if(techID == 26) { return(40.0000); } // Champion Cavalry
	else if(techID == 27) { return(20.0000); } // Watch Tower
	else if(techID == 28) { return(40.0000); } // Guard Tower
	else if(techID == 29) { return(40.0000); } // Ballista Tower
	else if(techID == 30) { return(40.0000); } // Boiling Oil
	else if(techID == 31) { return(20.0000); } // Levy Infantry
	else if(techID == 32) { return(40.0000); } // Burning Pitch
	else if(techID == 33) { return(20.0000); } // Masons
	else if(techID == 34) { return(30.0000); } // Pickaxe
	else if(techID == 35) { return(30.0000); } // Hand Axe
	else if(techID == 36) { return(40.0000); } // Shaft Mine
	else if(techID == 37) { return(45.0000); } // Bow Saw
	else if(techID == 38) { return(50.0000); } // Quarry
	else if(techID == 39) { return(55.0000); } // Carpenters
	else if(techID == 40) { return(40.0000); } // Bravery
	else if(techID == 41) { return(40.0000); } // Valley of the Kings
	else if(techID == 45) { return(40.0000); } // Winter Harvest
	else if(techID == 46) { return(40.0000); } // Safeguard
	else if(techID == 47) { return(40.0000); } // Rampage
	else if(techID == 48) { return(30.0000); } // Mithril Breastplate
	else if(techID == 49) { return(50.0000); } // Call Of Valhalla
	else if(techID == 50) { return(40.0000); } // Arctic Winds
	else if(techID == 51) { return(50.0000); } // Arctic Gale
	else if(techID == 52) { return(50.0000); } // Wrath Of The Deep
	else if(techID == 53) { return(40.0000); } // Spirited Charge
	else if(techID == 54) { return(30.0000); } // Thundering Hooves
	else if(techID == 55) { return(40.0000); } // Berserkergang
	else if(techID == 56) { return(40.0000); } // Rime
	else if(techID == 58) { return(40.0000); } // Draft Horses
	else if(techID == 59) { return(40.0000); } // Engineers
	else if(techID == 60) { return(30.0000); } // Architects
	else if(techID == 62) { return(40.0000); } // Bone Bow
	else if(techID == 63) { return(40.0000); } // Axe of Vengeance
	else if(techID == 64) { return(40.0000); } // Desert Wind
	else if(techID == 65) { return(40.0000); } // Enclosed Deck
	else if(techID == 66) { return(40.0000); } // Cladding
	else if(techID == 67) { return(50.0000); } // Fortified Wall
	else if(techID == 69) { return(40.0000); } // Skin Of The Rhino
	else if(techID == 71) { return(30.0000); } // Sacred Cats
	else if(techID == 72) { return(40.0000); } // Granite Blood
	else if(techID == 73) { return(30.0000); } // Hamarrtroll
	else if(techID == 74) { return(40.0000); } // Criosphinx
	else if(techID == 75) { return(40.0000); } // Hieracosphinx
	else if(techID == 76) { return(40.0000); } // Monstrous Rage
	else if(techID == 77) { return(40.0000); } // Phobos Spear of Panic
	else if(techID == 78) { return(40.0000); } // Bacchanalia
	else if(techID == 79) { return(30.0000); } // Sun Ray
	else if(techID == 80) { return(40.0000); } // Sylvan Lore
	else if(techID == 81) { return(60.0000); } // Forge of Olympus
	else if(techID == 91) { return(30.0000); } // Aurora Borealis
	else if(techID == 92) { return(60.0000); } // Age 2 Athena
	else if(techID == 93) { return(60.0000); } // Age 2 Ares
	else if(techID == 94) { return(60.0000); } // Age 2 Hermes
	else if(techID == 95) { return(60.0000); } // Age 3 Dionysos
	else if(techID == 96) { return(60.0000); } // Age 3 Apollo
	else if(techID == 97) { return(60.0000); } // Age 3 Aphrodite
	else if(techID == 98) { return(90.0000); } // Age 4 Hera
	else if(techID == 99) { return(90.0000); } // Age 4 Artemis
	else if(techID == 100) { return(90.0000); } // Age 4 Hephaestus
	else if(techID == 101) { return(20.0000); } // Hunting Dogs
	else if(techID == 102) { return(40.0000); } // Hand of Talos
	else if(techID == 103) { return(40.0000); } // Sarissa
	else if(techID == 104) { return(40.0000); } // Aegis Shield
	else if(techID == 105) { return(30.0000); } // Winged Messenger
	else if(techID == 106) { return(60.0000); } // Age 2 Anubis
	else if(techID == 107) { return(60.0000); } // Age 2 Bast
	else if(techID == 108) { return(60.0000); } // Age 2 Ptah
	else if(techID == 109) { return(60.0000); } // Age 3 Hathor
	else if(techID == 110) { return(60.0000); } // Age 3 Nephthys
	else if(techID == 111) { return(60.0000); } // Age 3 Sekhmet
	else if(techID == 112) { return(90.0000); } // Age 4 Thoth
	else if(techID == 113) { return(90.0000); } // Age 4 Osiris
	else if(techID == 114) { return(90.0000); } // Age 4 Horus
	else if(techID == 115) { return(40.0000); } // Feet of the Jackal
	else if(techID == 117) { return(60.0000); } // Age 2 Forseti
	else if(techID == 118) { return(60.0000); } // Age 2 Heimdall
	else if(techID == 119) { return(60.0000); } // Age 2 Freyja
	else if(techID == 120) { return(60.0000); } // Age 3 Skadi
	else if(techID == 121) { return(60.0000); } // Age 3 Bragi
	else if(techID == 122) { return(60.0000); } // Age 3 Njord
	else if(techID == 123) { return(90.0000); } // Age 4 Hel
	else if(techID == 124) { return(90.0000); } // Age 4 Baldr
	else if(techID == 125) { return(90.0000); } // Age 4 Tyr
	else if(techID == 126) { return(30.0000); } // Signal Fires
	else if(techID == 127) { return(40.0000); } // Stone Wall
	else if(techID == 128) { return(50.0000); } // Shoulder of Talos
	else if(techID == 130) { return(40.0000); } // Book of Thoth
	else if(techID == 131) { return(40.0000); } // Face of the Gorgon
	else if(techID == 132) { return(50.0000); } // Citadel Wall
	else if(techID == 135) { return(30.0000); } // Conscript Infantry
	else if(techID == 136) { return(20.0000); } // Levy Archers
	else if(techID == 137) { return(30.0000); } // Conscript Archers
	else if(techID == 138) { return(20.0000); } // Levy Cavalry
	else if(techID == 139) { return(30.0000); } // Conscript Cavalry
	else if(techID == 140) { return(45.0000); } // Carrier Pigeons
	else if(techID == 141) { return(40.0000); } // Flood Control
	else if(techID == 153) { return(50.0000); } // Dwarven Mail
	else if(techID == 154) { return(40.0000); } // Dwarven Shields
	else if(techID == 155) { return(50.0000); } // Dwarven Weapons
	else if(techID == 157) { return(40.0000); } // Serpent Spear
	else if(techID == 158) { return(40.0000); } // Flood of the Nile
	else if(techID == 159) { return(40.0000); } // Vaults of Erebus
	else if(techID == 160) { return(40.0000); } // Lord of Horses
	else if(techID == 161) { return(40.0000); } // Olympic Parentage
	else if(techID == 162) { return(40.0000); } // Pig Sticker
	else if(techID == 163) { return(25.0000); } // Lone Wanderer
	else if(techID == 164) { return(25.0000); } // Eyes in the Forest
	else if(techID == 165) { return(60.0000); } // Scalloped Axe
	else if(techID == 166) { return(40.0000); } // Ring Giver
	else if(techID == 167) { return(30.0000); } // Long Serpent
	else if(techID == 168) { return(50.0000); } // Swine Array
	else if(techID == 173) { return(15.0000); } // Heavy Camelry
	else if(techID == 174) { return(40.0000); } // Champion Camelry
	else if(techID == 177) { return(40.0000); } // New Kingdom
	else if(techID == 178) { return(30.0000); } // Medjay
	else if(techID == 179) { return(30.0000); } // Funeral Rites
	else if(techID == 180) { return(40.0000); } // Spirit of Maat
	else if(techID == 181) { return(40.0000); } // City of the Dead
	else if(techID == 182) { return(60.0000); } // Fortify Town Center
	else if(techID == 206) { return(30.0000); } // Golden Apples
	else if(techID == 207) { return(30.0000); } // Eldhrimnir Kettle
	else if(techID == 215) { return(30.0000); } // Will of Kronos
	else if(techID == 216) { return(30.0000); } // Labyrinth of Minos
	else if(techID == 217) { return(40.0000); } // Flames of Typhon
	else if(techID == 218) { return(30.0000); } // Divine Blood
	else if(techID == 219) { return(40.0000); } // Shafts of Plague
	else if(techID == 240) { return(40.0000); } // Athenian Wall
	else if(techID == 244) { return(40.0000); } // Dwarven Auger
	else if(techID == 245) { return(20.0000); } // Purse Seine
	else if(techID == 246) { return(40.0000); } // Reinforced Hull
	else if(techID == 247) { return(40.0000); } // Huntress Axe
	else if(techID == 254) { return(40.0000); } // Crocodopolis
	else if(techID == 255) { return(60.0000); } // Leather Frame Shield
	else if(techID == 256) { return(60.0000); } // Electrum Bullets
	else if(techID == 257) { return(60.0000); } // Stones of Red Linen
	else if(techID == 258) { return(50.0000); } // Spear on the Horizon
	else if(techID == 259) { return(50.0000); } // Feral
	else if(techID == 260) { return(30.0000); } // Anastrophe
	else if(techID == 261) { return(50.0000); } // Trierarch
	else if(techID == 262) { return(40.0000); } // Thracian Horses
	else if(techID == 267) { return(40.0000); } // Roar of Orthus
	else if(techID == 268) { return(40.0000); } // Atef Crown
	else if(techID == 269) { return(30.0000); } // Conscript Sailors
	else if(techID == 270) { return(40.0000); } // Naval Oxybeles
	else if(techID == 271) { return(40.0000); } // Enyos Bow of Horror
	else if(techID == 272) { return(40.0000); } // Deimos Sword of Dread
	else if(techID == 273) { return(40.0000); } // Champion Elephants
	else if(techID == 274) { return(40.0000); } // Hall of Thanes
	else if(techID == 275) { return(30.0000); } // Adze of Wepwawet
	else if(techID == 276) { return(40.0000); } // Slings of the Sun
	else if(techID == 277) { return(40.0000); } // Ram of the West Wind
	else if(techID == 278) { return(50.0000); } // Sundried Mud Brick
	else if(techID == 279) { return(50.0000); } // Funeral Barge
	else if(techID == 280) { return(30.0000); } // Necropolis
	else if(techID == 282) { return(50.0000); } // Iron Mail Thor
	else if(techID == 283) { return(40.0000); } // Bronze Mail Thor
	else if(techID == 284) { return(40.0000); } // Bronze Shields Thor
	else if(techID == 285) { return(40.0000); } // Bronze Weapons Thor
	else if(techID == 286) { return(50.0000); } // Iron Shields Thor
	else if(techID == 287) { return(50.0000); } // Iron Weapons Thor
	else if(techID == 288) { return(40.0000); } // Burning Pitch Thor
	else if(techID == 289) { return(60.0000); } // Hammer of the Gods
	else if(techID == 290) { return(60.0000); } // Meteoric Iron Mail
	else if(techID == 291) { return(60.0000); } // Dragonscale Shields
	else if(techID == 292) { return(40.0000); } // Tusks of Apedemak
	else if(techID == 297) { return(30.0000); } // Oracle
	else if(techID == 298) { return(40.0000); } // Sons of Sleipnir
	else if(techID == 304) { return(4.0000); } // Omniscience
	else if(techID == 305) { return(20.0000); } // Medium Axemen
	else if(techID == 306) { return(30.0000); } // Heavy Axemen
	else if(techID == 307) { return(40.0000); } // Champion Axemen
	else if(techID == 308) { return(20.0000); } // Medium Spearmen
	else if(techID == 309) { return(30.0000); } // Heavy Spearmen
	else if(techID == 310) { return(40.0000); } // Champion Spearmen
	else if(techID == 311) { return(15.0000); } // Heavy Chariots
	else if(techID == 312) { return(40.0000); } // Champion Chariots
	else if(techID == 313) { return(15.0000); } // Heavy Elephants
	else if(techID == 314) { return(20.0000); } // Levy Barracks Soldiers
	else if(techID == 315) { return(30.0000); } // Conscript Barracks Soldiers
	else if(techID == 316) { return(20.0000); } // Levy Migdol Soldiers
	else if(techID == 317) { return(20.0000); } // Conscript Migdol Soldiers
	else if(techID == 318) { return(20.0000); } // Medium Slingers
	else if(techID == 319) { return(30.0000); } // Heavy Slingers
	else if(techID == 320) { return(40.0000); } // Champion Slingers
	else if(techID == 321) { return(30.0000); } // Shaduf
	else if(techID == 324) { return(20.0000); } // Levy Longhouse Soldiers
	else if(techID == 325) { return(30.0000); } // Conscript Longhouse Soldiers
	else if(techID == 326) { return(30.0000); } // Conscript Hill Fort Soldiers
	else if(techID == 327) { return(20.0000); } // Levy Hill Fort Soldiers
	else if(techID == 328) { return(30.0000); } // Thurisaz Rune
	else if(techID == 338) { return(30.0000); } // Salt Amphora
	else if(techID == 341) { return(30.0000); } // Temple of Healing
	else if(techID == 342) { return(40.0000); } // Greatest of Fifty
	else if(techID == 343) { return(30.0000); } // Copper Mail Thor
	else if(techID == 344) { return(30.0000); } // Copper Shields Thor
	else if(techID == 345) { return(30.0000); } // Copper Weapons Thor
	else if(techID == 346) { return(40.0000); } // Weapon of the Titans
	else if(techID == 347) { return(60.0000); } // Age 2 Fake
	else if(techID == 348) { return(60.0000); } // Age 3 Fake
	else if(techID == 349) { return(90.0000); } // Age 4 Fake
	else if(techID == 350) { return(20.0000); } // Crenellations
	else if(techID == 397) { return(60.0000); } // Age 2 Okeanus
	else if(techID == 398) { return(60.0000); } // Age 2 Prometheus
	else if(techID == 399) { return(60.0000); } // Age 2 Leto
	else if(techID == 400) { return(60.0000); } // Age 3 Hyperion
	else if(techID == 401) { return(60.0000); } // Age 3 Rheia
	else if(techID == 402) { return(60.0000); } // Age 3 Theia
	else if(techID == 403) { return(90.0000); } // Age 4 Helios
	else if(techID == 404) { return(90.0000); } // Age 4 Hekate
	else if(techID == 405) { return(90.0000); } // Age 4 Atlas
	else if(techID == 411) { return(50.0000); } // Bronze Wall
	else if(techID == 412) { return(50.0000); } // Iron Wall
	else if(techID == 413) { return(60.0000); } // Oreichalkos Wall
	else if(techID == 415) { return(40.0000); } // Heavy Fireship
	else if(techID == 416) { return(30.0000); } // Heart of the Titans
	else if(techID == 417) { return(30.0000); } // Hephaestus Revenge
	else if(techID == 420) { return(20.0000); } // Levy Mainline Units
	else if(techID == 421) { return(20.0000); } // Levy Specialty Units
	else if(techID == 422) { return(20.0000); } // Levy Palace Units
	else if(techID == 423) { return(30.0000); } // Conscript Mainline Units
	else if(techID == 424) { return(20.0000); } // Conscript Specialty Units
	else if(techID == 425) { return(30.0000); } // Conscript Palace Units
	else if(techID == 426) { return(50.0000); } // Halo of the Sun
	else if(techID == 427) { return(30.0000); } // Horns of Consecration
	else if(techID == 428) { return(25.0000); } // Lemurian Descendants
	else if(techID == 429) { return(40.0000); } // Channels
	else if(techID == 430) { return(30.0000); } // Alluvial Clay
	else if(techID == 432) { return(40.0000); } // Mythic Rejuvenation
	else if(techID == 433) { return(40.0000); } // Heroic Renewal
	else if(techID == 435) { return(40.0000); } // Bite of the Shark
	else if(techID == 437) { return(40.0000); } // Heavy Chieroballista
	else if(techID == 440) { return(50.0000); } // Gemino
	else if(techID == 443) { return(90.0000); } // Secrets of the Titans
	else if(techID == 446) { return(10.0000); } // Focus
	else if(techID == 447) { return(40.0000); } // Safe Passage
	else if(techID == 448) { return(40.0000); } // Heroic Fleet
	else if(techID == 449) { return(40.0000); } // Weightless Mace
	else if(techID == 450) { return(30.0000); } // Eyes of Atlas
	else if(techID == 451) { return(40.0000); } // Asper Blood
	else if(techID == 452) { return(30.0000); } // Titan Shield
	else if(techID == 453) { return(40.0000); } // Poseidons Secret
	else if(techID == 460) { return(40.0000); } // Volcanic Forge
	else if(techID == 470) { return(40.0000); } // Mail of Orichalkos
	else if(techID == 471) { return(20.0000); } // Hands of the Pharaoh
	else if(techID == 481) { return(30.0000); } // Rheias Gift
	else if(techID == 482) { return(60.0000); } // Time Shift Fake
	else if(techID == 483) { return(20.0000); } // FocusTurbo
	else if(techID == 484) { return(40.0000); } // Celerity
	else if(techID == 487) { return(40.0000); } // Io Guardian
	else if(techID == 488) { return(60.0000); } // Time Shift Fake 2
	else if(techID == 489) { return(40.0000); } // Axe of Muspell
	else if(techID == 490) { return(40.0000); } // Champion Chieroballista
	else if(techID == 493) { return(45.0000); } // Beast Slayer
	else if(techID == 494) { return(40.0000); } // Lance of Stone
	else if(techID == 495) { return(40.0000); } // Sudden Death Atlantean
	else if(techID == 499) { return(40.0000); } // Petrified
	else if(techID == 519) { return(60.0000); } // Age 2 Change
	else if(techID == 520) { return(60.0000); } // Age 2 Huangdi
	else if(techID == 521) { return(60.0000); } // Age 2 Sunwukong
	else if(techID == 522) { return(60.0000); } // Age 3 Dabogong
	else if(techID == 523) { return(60.0000); } // Age 3 Hebo
	else if(techID == 524) { return(60.0000); } // Age 3 Zhongkui
	else if(techID == 525) { return(90.0000); } // Age 4 Aokuang
	else if(techID == 526) { return(90.0000); } // Age 4 Xiwangmu
	else if(techID == 527) { return(90.0000); } // Age 4 Chongli
	else if(techID == 528) { return(20.0000); } // Medium Barracks
	else if(techID == 529) { return(30.0000); } // Heavy Barracks
	else if(techID == 530) { return(40.0000); } // Champion Barracks
	else if(techID == 531) { return(20.0000); } // Medium Stable
	else if(techID == 532) { return(30.0000); } // Heavy Stable
	else if(techID == 533) { return(40.0000); } // Champion Stable
	else if(techID == 535) { return(30.0000); } // Heavy Castle
	else if(techID == 536) { return(40.0000); } // Champion Castle
	else if(techID == 537) { return(20.0000); } // Levy Barracks Chinese Soldiers
	else if(techID == 538) { return(30.0000); } // Conscript Barracks Chinese Soldiers
	else if(techID == 539) { return(20.0000); } // Levy Stable Soldiers
	else if(techID == 540) { return(20.0000); } // Conscript Stable Soldiers
	else if(techID == 541) { return(20.0000); } // Levy Castle Soldiers
	else if(techID == 542) { return(20.0000); } // Conscript Castle Soldiers
	else if(techID == 561) { return(40.0000); } // Domestication
	else if(techID == 562) { return(20.0000); } // Acupuncture
	else if(techID == 563) { return(30.0000); } // Wheelbarrow
	else if(techID == 564) { return(30.0000); } // Elixir of Immortality
	else if(techID == 565) { return(40.0000); } // Houyis Bow
	else if(techID == 566) { return(30.0000); } // Jade Rabbit
	else if(techID == 567) { return(25.0000); } // Golden Banded Staff
	else if(techID == 568) { return(40.0000); } // Pillar of the Ocean
	else if(techID == 569) { return(40.0000); } // Paper Talisman
	else if(techID == 570) { return(40.0000); } // Oracle Bone Script
	else if(techID == 571) { return(40.0000); } // Five Grains
	else if(techID == 572) { return(40.0000); } // Stone Armor
	else if(techID == 573) { return(40.0000); } // House Altars
	else if(techID == 574) { return(40.0000); } // Burials
	else if(techID == 575) { return(40.0000); } // Landlord Spirit
	else if(techID == 576) { return(40.0000); } // Lord of the River
	else if(techID == 577) { return(35.0000); } // Rammed Earth
	else if(techID == 578) { return(40.0000); } // Sacrifices
	else if(techID == 579) { return(30.0000); } // Demon Slayer
	else if(techID == 580) { return(40.0000); } // Life Drain
	else if(techID == 581) { return(40.0000); } // Unbrideled Anger
	else if(techID == 582) { return(40.0000); } // Dragon Scales
	else if(techID == 583) { return(40.0000); } // East Sea
	else if(techID == 584) { return(40.0000); } // Nezhas Defeat
	else if(techID == 585) { return(40.0000); } // Golden Peaches
	else if(techID == 586) { return(40.0000); } // Celestial Palace
	else if(techID == 587) { return(30.0000); } // Tiger Spirit
	else if(techID == 588) { return(40.0000); } // Heavenly Fire
	else if(techID == 589) { return(40.0000); } // Stirrup
	else if(techID == 590) { return(40.0000); } // Ancient Destroyer
	else if(techID == 591) { return(50.0000); } // Earthen Wall
	else if(techID == 592) { return(40.0000); } // Stone Wall Chinese
	else if(techID == 593) { return(50.0000); } // Great Wall
	else if(techID == 595) { return(20.0000); } // Medium Khopesh
	else if(techID == 596) { return(30.0000); } // Heavy Khopesh
	else if(techID == 597) { return(40.0000); } // Champion Khopesh
	return(0.0);
}

