# XS Grammar rules
#
# Current Incoming Tokens:
# - Word	# Any word that isn't a reserved type
# - CbOp	# Curlybracket open {
# - CbCl	# Curlybracket close }
# - PaOp	# Parenthese open (
# - PaCl	# Parenthese close )
# - SqOp	# SquareBracket open [
# - SqCl	# SquareBracket close ]
# - Oper	# Operators
# - AsOp	# Assignment Operators
# - Asgn	# Assignment
# - Comp	# Comparison operatros
# - Cmma	# Comma
# - Numb	# Number
# - Coln	# Colon
# - Semc	# Semicolon
# - Stri	# String
# - Squo	# Single Quote
# - DatT	# DataType
# - KeyW	# Keyword

# Function Implementation
FuncImpl>
	Root: True
	Type: DatT
	FollowedBy: FuncName

FuncName>
	Type: Word
	FollowedBy: FuncParamOpen

FuncParamOpen>
	Type: PaOp
	FollowedBy: FuncParamEnd

FuncParamEnd>
	Type: PaCl
	FollowedBy: FuncBodyOpen

FuncBodyOpen>
	Type: CbOp
	FollowedBy: FuncBodyClose|VariableDec
	Until: FuncBodyClose

FuncBodyClose>
	Type: CbCl

# Function Declaration
MutFunc>
	Root: True
	Type: KeyW
	Value: mutable
	FollowedBy: MutFuncDatT

MutFuncDatT>
	Type: DatT
	FollowedBy: FuncName

# Variable
VariableDec>
	Root: True
	Type: DatT
	FollowedBy: VariableName

VariableName>
	Type: Word
	FollowedBy: EndExpression

EndExpression>
	Type: Semc
